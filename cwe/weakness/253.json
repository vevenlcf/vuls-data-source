{
  "id": "253",
  "name": "Incorrect Check of Function Return Value",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software incorrectly checks a return value from a function, which prevents the software from detecting errors or exceptional conditions.",
  "extended_description": "Important and common functions will return some value about the success of its actions. This will alert the program whether or not to handle any errors caused by that function.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "573",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "754",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "likelihood_of_exploit": "Low",
  "common_consequences": [
    {
      "scope": [
        "Availability",
        "Integrity"
      ],
      "impact": [
        "Unexpected State",
        "DoS: Crash, Exit, or Restart"
      ],
      "note": "An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "Use a language or compiler that uses exceptions and requires the catching of those exceptions."
      ],
      "strategy": "Language Selection"
    },
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Properly check all functions which return a value."
      ]
    },
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "When designing any function make sure you return a value or throw an exception in case of an error."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               \u003cIntro_Text\u003eThis code attempts to allocate memory for 4 integers and checks if the allocation succeeds.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C\"\u003e\n                  \u003cxhtml:div\u003etmp = malloc(sizeof(int) * 4);\u003cxhtml:br/\u003eif (tmp \u0026lt; 0 ) {\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003eperror(\"Failure\");\u003cxhtml:br/\u003e\n                           \u003cxhtml:i\u003e//should have checked if the call returned 0\u003c/xhtml:i\u003e\n                           \u003cxhtml:br/\u003e\n                        \u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThe code assumes that only a negative return value would indicate an error, but malloc() may return a null pointer when there is an error. The value of tmp could then be equal to 0, and the error would be missed.\u003c/Body_Text\u003e\n            "
    }
  ],
  "references": [
    {
      "section": "Chapter 7, \"Return Value Testing and Interpretation\", Page 340",
      "reference_id": "REF-62",
      "author": [
        "Mark Dowd",
        "John McDonald",
        "Justin Schuh"
      ],
      "title": "The Art of Software Security Assessment",
      "publication_year": "2006",
      "publisher": "Addison Wesley",
      "edition": "1st Edition"
    },
    {
      "reference_id": "REF-18",
      "author": [
        "Secure Software, Inc."
      ],
      "title": "The CLASP Application Security Process",
      "url": "https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf",
      "publication_year": "2005"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CLASP",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-11-24T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-03-10T00:00:00Z",
        "modification_comment": "updated Description, Name, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-06-23T00:00:00Z",
        "modification_comment": "updated Description, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Demonstrative_Examples, Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-01-03T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated References"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Misinterpreted Function Return Value",
        "date": "2009-03-10T00:00:00Z"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "CLASP",
      "entry_name": "Misinterpreted function return value"
    },
    {
      "taxonomy_name": "Software Fault Patterns",
      "entry_name": "Unchecked Status Condition",
      "entry_id": "SFP4"
    },
    {
      "taxonomy_name": "CERT C Secure Coding",
      "entry_name": "Detect and handle standard library errors",
      "entry_id": "ERR33-C",
      "mapping_fit": "Imprecise"
    },
    {
      "taxonomy_name": "CERT C Secure Coding",
      "entry_name": "Detect and handle POSIX library errors",
      "entry_id": "POS54-C",
      "mapping_fit": "Imprecise"
    }
  ]
}
