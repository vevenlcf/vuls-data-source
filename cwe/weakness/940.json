{
  "id": "940",
  "name": "Improper Verification of Source of a Communication Channel",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",
  "extended_description": "When an attacker can successfully establish a communication channel from an untrusted origin, the attacker may be able to gain privileges and access unexpected functionality.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "923",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Mobile",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation",
      "note": [
        "REALIZATION: This weakness is caused during implementation of an architectural security tactic."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Access Control",
        "Other"
      ],
      "impact": [
        "Gain Privileges or Assume Identity",
        "Varies by Context"
      ],
      "note": "An attacker can access any functionality that is inadvertently accessible to the source."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "\n                  \u003cxhtml:p\u003eUse a mechanism that can validate the identity of the source, such as a certificate, and validate the integrity of data to ensure that it cannot be modified in transit using an Adversary-in-the-Middle (AITM) attack.\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eWhen designing functionality of actions in the URL scheme, consider whether the action should be accessible to all mobile applications, or if an allowlist of applications to interface with is appropriate.\u003c/xhtml:p\u003e\n               "
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-112",
      "text": "\n               \u003cIntro_Text\u003eThis Android application will remove a user account when it receives an intent to do so:\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Java\"\u003e\n                  \u003cxhtml:div\u003eIntentFilter filter = new IntentFilter(\"com.example.RemoveUser\");\u003cxhtml:br/\u003eMyReceiver receiver = new MyReceiver();\u003cxhtml:br/\u003eregisterReceiver(receiver, filter);\u003cxhtml:br/\u003e\n                     \u003cxhtml:br/\u003epublic class DeleteReceiver extends BroadcastReceiver {\u003cxhtml:div style=\"margin-left:10px;\"\u003e@Override\u003cxhtml:br/\u003epublic void onReceive(Context context, Intent intent) {\u003cxhtml:div style=\"margin-left:10px;\"\u003eint userID = intent.getIntExtra(\"userID\");\u003cxhtml:br/\u003edestroyUserData(userID);\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis application does not check the origin of the intent, thus allowing any malicious application to remove a user. Always check the origin of an intent, or create an allowlist of trusted applications using the manifest.xml file.\u003c/Body_Text\u003e\n            "
    },
    {
      "demonstrative_example_id": "DX-109",
      "text": "\n               \u003cIntro_Text\u003eThese Android and iOS applications intercept URL loading within a WebView and perform special actions if a particular URL scheme is used, thus allowing the Javascript within the WebView to communicate with the application:\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Java\"\u003e\n                  \u003cxhtml:div\u003e\n                     \u003cxhtml:i\u003e// Android\u003c/xhtml:i\u003e\n                     \u003cxhtml:br/\u003e@Override\u003cxhtml:br/\u003epublic boolean shouldOverrideUrlLoading(WebView view, String url){\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003eif (url.substring(0,14).equalsIgnoreCase(\"examplescheme:\")){\u003cxhtml:div style=\"margin-left:10px;\"\u003eif(url.substring(14,25).equalsIgnoreCase(\"getUserInfo\")){\u003cxhtml:div style=\"margin-left:10px;\"\u003ewriteDataToView(view, UserData);\u003cxhtml:br/\u003ereturn false;\u003c/xhtml:div\u003e}\u003cxhtml:br/\u003eelse{\u003cxhtml:div style=\"margin-left:10px;\"\u003ereturn true;\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Objective-C\"\u003e\n                  \u003cxhtml:div\u003e\n                     \u003cxhtml:i\u003e// iOS\u003c/xhtml:i\u003e\n                     \u003cxhtml:br/\u003e-(BOOL) webView:(UIWebView *)exWebView shouldStartLoadWithRequest:(NSURLRequest *)exRequest navigationType:(UIWebViewNavigationType)exNavigationType\u003cxhtml:br/\u003e{\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003eNSURL *URL = [exRequest URL];\u003cxhtml:br/\u003eif ([[URL scheme] isEqualToString:@\"exampleScheme\"])\u003cxhtml:br/\u003e{\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                              \u003cxhtml:div\u003eNSString *functionString = [URL resourceSpecifier];\u003cxhtml:br/\u003eif ([functionString hasPrefix:@\"specialFunction\"])\u003cxhtml:br/\u003e{\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                                    \u003cxhtml:div\u003e\n                                       \u003cxhtml:br/\u003e\n                                       \u003cxhtml:i\u003e// Make data available back in webview.\u003c/xhtml:i\u003e\n                                       \u003cxhtml:br/\u003eUIWebView *webView = [self writeDataToView:[URL query]];\u003c/xhtml:div\u003e\n                                 \u003c/xhtml:div\u003e}\u003cxhtml:br/\u003ereturn NO;\u003c/xhtml:div\u003e\n                           \u003c/xhtml:div\u003e}\u003cxhtml:br/\u003ereturn YES;\u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eA call into native code can then be initiated by passing parameters within the URL:\u003c/Body_Text\u003e\n               \u003cExample_Code Nature=\"attack\" Language=\"JavaScript\"\u003e\n                  \u003cxhtml:div\u003ewindow.location = examplescheme://method?parameter=value\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eBecause the application does not check the source, a malicious website loaded within this WebView has the same access to the API as a trusted site.\u003c/Body_Text\u003e\n            "
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2000-1218",
      "description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1218"
    },
    {
      "reference": "CVE-2005-0877",
      "description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0877"
    },
    {
      "reference": "CVE-2001-1452",
      "description": "DNS server caches glue records received from non-delegated name servers",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1452"
    }
  ],
  "references": [
    {
      "reference_id": "REF-324",
      "author": [
        "Taimur Aslam"
      ],
      "title": "A Taxonomy of Security Faults in the UNIX Operating System",
      "url": "http://cwe.mitre.org/documents/sources/ATaxonomyofSecurityFaultsintheUNIXOperatingSystem%5BAslam95%5D.pdf",
      "publication_year": "1995",
      "publication_month": "--08",
      "publication_day": "---01"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2014-02-13T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Modes_of_Introduction, References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-06-20T00:00:00Z",
        "modification_comment": "updated Related_Attack_Patterns"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Potential_Mitigations, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-06-25T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples, Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-07-20T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-10-28T00:00:00Z",
        "modification_comment": "updated Relationships"
      }
    ]
  },
  "related_attack_patterns": [
    "594",
    "595",
    "596"
  ],
  "notes": [
    {
      "type": "Relationship",
      "text": "While many access control issues involve authenticating the user, this weakness is more about authenticating the actual source of the communication channel itself; there might not be any \"user\" in such cases."
    }
  ]
}
