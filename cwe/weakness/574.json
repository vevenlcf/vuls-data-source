{
  "id": "574",
  "name": "EJB Bad Practices: Use of Synchronization Primitives",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Draft",
  "description": "The program violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.",
  "extended_description": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the program violates the following EJB guideline: \"An enterprise bean must not use thread synchronization primitives to synchronize execution of multiple instances.\" The specification justifies this requirement in the following way: \"This rule is required to ensure consistent runtime semantics because while some EJB containers may use a single JVM to execute all enterprise bean's instances, others may distribute the instances across multiple JVMs.\"",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "695",
      "view_id": "1000"
    },
    {
      "nature": "ChildOf",
      "cweid": "821",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "prevalence": "Undetermined",
        "name": "Java"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Other"
      ],
      "impact": [
        "Quality Degradation"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Do not use Synchronization Primitives when writing EJBs."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               \u003cIntro_Text\u003eIn the following Java example a Customer Entity EJB provides access to customer information in a database for a business application.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Java\"\u003e\n                  \u003cxhtml:div\u003e@Entity\u003cxhtml:br/\u003epublic class Customer implements Serializable {\u003cxhtml:br/\u003e\n                     \u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003eprivate String id;\u003cxhtml:br/\u003eprivate String firstName;\u003cxhtml:br/\u003eprivate String lastName;\u003cxhtml:br/\u003eprivate Address address;\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic Customer() {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic Customer(String id, String firstName, String lastName) {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003e@Id\u003cxhtml:br/\u003epublic String getCustomerId() {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic synchronized void setCustomerId(String id) {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic String getFirstName() {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic synchronized void setFirstName(String firstName) {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic String getLastName() {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic synchronized void setLastName(String lastName) {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003e@OneToOne()\u003cxhtml:br/\u003epublic Address getAddress() {...}\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003epublic synchronized void setAddress(Address address) {...}\u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eHowever, the customer entity EJB uses the synchronized keyword for the set methods to attempt to provide thread safe synchronization for the member variables. The use of synchronized methods violate the restriction of the EJB specification against the use synchronization primitives within EJBs. Using synchronization primitives may cause inconsistent behavior of the EJB when used within different EJB containers.\u003c/Body_Text\u003e\n            "
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Community",
      "submission_date": "2006-12-15T00:00:00Z",
      "submission_comment": "Submitted by members of the CWE community to extend early CWE versions"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Relationships, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-10-29T00:00:00Z",
        "modification_comment": "updated Description, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-04-05T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-09-27T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-12-13T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-27T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Relationships"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "Software Fault Patterns",
      "entry_name": "Use of an improper API",
      "entry_id": "SFP3"
    }
  ]
}
