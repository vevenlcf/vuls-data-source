{
  "id": "1295",
  "name": "Debug Messages Revealing Unnecessary Information",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
  "extended_description": "\n\t\t\t\t\u003cxhtml:p\u003eDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the “security by obscurity” factor. While “security by obscurity” alone is insufficient, it can help as a part of “Defense-in-depth”. \u003c/xhtml:p\u003e\n\t\t\t",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "200",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "PeerOf",
      "cweid": "209",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Technology-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "operating_system": [
      {
        "class": "OS-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "architecture": [
      {
        "class": "Architecture-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Integrity",
        "Availability",
        "Access Control",
        "Accountability",
        "Authentication",
        "Authorization",
        "Non-Repudiation"
      ],
      "impact": [
        "Read Memory",
        "Bypass Protection Mechanism",
        "Gain Privileges or Assume Identity",
        "Varies by Context"
      ],
      "likelihood": "Medium"
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Ensure that a debug message does not reveal any unnecessary information during the debug process for the intended response."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n\t\t\t\t\t\u003cIntro_Text\u003eThis example here shows how an attacker can take advantage of unnecessary information in debug messages.\u003c/Intro_Text\u003e\n\t\t\t\t\t\u003cBody_Text\u003eExample 1: Suppose in response to a Test Access Port (TAP) chaining request the debug message also reveals the current TAP hierarchy (the full topology) in addition to the success/failure message.\u003c/Body_Text\u003e\n\t\t\t\t\t\u003cBody_Text\u003eExample 2: In response to a password-filling request, the debug message, instead of a simple Granted/Denied response, prints an elaborate message, “The user-entered password does not match the actual password stored in \u0026lt;directory name\u0026gt;.”\u003c/Body_Text\u003e\n\t\t\t\t\t\u003cBody_Text\u003eThe result of the above examples is that the user is able to gather additional unauthorized information about the system from the debug messages.\u003c/Body_Text\u003e\n\t\t\t\t\t\u003cBody_Text\u003eThe solution is to ensure that Debug messages do not reveal additional details.\u003c/Body_Text\u003e\n\t\t\t\t"
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2017-18326",
      "description": "modem debug messages include cryptographic keys",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18326"
    }
  ],
  "references": [
    {
      "reference_id": "REF-1112",
      "title": "Android Security Bulletin—December 2018",
      "url": "https://source.android.com/security/bulletin/2018-12-01.html"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "Parbati Kumar Manna, Hareesh Khattri, Arun Kanuparthi",
      "submission_organization": "Intel Corporation",
      "submission_date": "2020-05-31T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-07-20T00:00:00Z",
        "modification_comment": "updated Observed_Examples, Related_Attack_Patterns, Relationships"
      }
    ]
  },
  "related_attack_patterns": [
    "121"
  ]
}
