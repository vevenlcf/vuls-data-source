{
  "id": "323",
  "name": "Reusing a Nonce, Key Pair in Encryption",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "Nonces should be used for the present occasion and only once.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "344",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "background_details": [
    "Nonces are often bundled with a key in a communication exchange to produce a new session key for each exchange."
  ],
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design",
      "note": [
        "REALIZATION: This weakness is caused during implementation of an architectural security tactic."
      ]
    }
  ],
  "likelihood_of_exploit": "High",
  "common_consequences": [
    {
      "scope": [
        "Access Control"
      ],
      "impact": [
        "Bypass Protection Mechanism",
        "Gain Privileges or Assume Identity"
      ],
      "note": "Potentially a replay attack, in which an attacker could send the same data twice, could be crafted if nonces are allowed to be reused. This could allow a user to send a message which masquerades as a valid message from a valid user."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Refuse to reuse nonce values."
      ]
    },
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Use techniques such as requiring incrementing, time based and/or challenge response to assure uniqueness of nonces."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               \u003cIntro_Text\u003eThis code takes a password, concatenates it with a nonce, then encrypts it before sending over a network:\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C\"\u003e\n                  \u003cxhtml:div\u003evoid encryptAndSendPassword(char *password){\u003cxhtml:div style=\"margin-left:10px;\"\u003echar *nonce = \"bad\";\u003cxhtml:br/\u003e...\u003cxhtml:br/\u003echar *data = (unsigned char*)malloc(20);\u003cxhtml:br/\u003eint para_size = strlen(nonce) + strlen(password);\u003cxhtml:br/\u003echar *paragraph = (char*)malloc(para_size);\u003cxhtml:br/\u003eSHA1((const unsigned char*)paragraph,parsize,(unsigned char*)data);\u003cxhtml:br/\u003esendEncryptedData(data)\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eBecause the nonce used is always the same, an attacker can impersonate a trusted party by intercepting and resending the encrypted password. This attack avoids the need to learn the unencrypted password.\u003c/Body_Text\u003e\n            "
    },
    {
      "text": "\n               \u003cIntro_Text\u003eThis code sends a command to a remote server, using an encrypted password and nonce to prove the command is from a trusted party:\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C++\"\u003e\n                  \u003cxhtml:div\u003eString command = new String(\"some command to execute\");\u003cxhtml:br/\u003eMessageDigest nonce = MessageDigest.getInstance(\"SHA\");\u003cxhtml:br/\u003enonce.update(String.valueOf(\"bad nonce\"));\u003cxhtml:br/\u003ebyte[] nonce = nonce.digest();\u003cxhtml:br/\u003eMessageDigest password = MessageDigest.getInstance(\"SHA\");\u003cxhtml:br/\u003epassword.update(nonce + \"secretPassword\");\u003cxhtml:br/\u003ebyte[] digest = password.digest();\u003cxhtml:br/\u003esendCommand(digest, command)\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eOnce again the nonce used is always the same. An attacker may be able to replay previous legitimate commands or execute new arbitrary commands.\u003c/Body_Text\u003e\n            "
    }
  ],
  "references": [
    {
      "reference_id": "REF-18",
      "author": [
        "Secure Software, Inc."
      ],
      "title": "The CLASP Application Security Process",
      "url": "https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf",
      "publication_year": "2005"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CLASP",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Background_Details, Common_Consequences, Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples, Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Modes_of_Introduction, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-06-20T00:00:00Z",
        "modification_comment": "updated Type"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated References"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-10-28T00:00:00Z",
        "modification_comment": "updated Relationships"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "CLASP",
      "entry_name": "Reusing a nonce, key pair in encryption"
    }
  ]
}
