{
  "id": "203",
  "name": "Observable Discrepancy",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
  "extended_description": "Discrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "200",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "200",
      "view_id": "1003",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Technology-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Access Control"
      ],
      "impact": [
        "Read Application Data",
        "Bypass Protection Mechanism"
      ],
      "note": "An attacker can gain access to sensitive information about the system, including authentication information that may allow an attacker to gain access to the system."
    },
    {
      "scope": [
        "Confidentiality"
      ],
      "impact": [
        "Read Application Data"
      ],
      "note": "When cryptographic primitives are vulnerable to side-channel-attacks, this could be used to reveal unencrypted plaintext in the worst case."
    }
  ],
  "potential_mitigations": [
    {
      "mitigation_id": "MIT-46",
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "\n                  \u003cxhtml:p\u003eCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\u003c/xhtml:p\u003e\n               "
      ],
      "strategy": "Separation of Privilege"
    },
    {
      "mitigation_id": "MIT-39",
      "phase": [
        "Implementation"
      ],
      "description": [
        "\n                  \u003cxhtml:p\u003eEnsure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eIf errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.\u003c/xhtml:p\u003e\n\t\t  \u003cxhtml:p\u003eAvoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.\u003c/xhtml:p\u003e\n               "
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-38",
      "text": "\n               \u003cIntro_Text\u003eThe following code checks validity of the supplied username and password and notifies the user of a successful or failed login.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Perl\"\u003e\n                  \u003cxhtml:div\u003emy $username=param('username');\n                  \u003cxhtml:br/\u003emy $password=param('password');\n                  \u003cxhtml:br/\u003e\n                  \u003cxhtml:br/\u003eif (IsValidUsername($username) == 1)\n                  \u003cxhtml:br/\u003e{\n                  \u003cxhtml:div style=\"margin-left:10px;\"\u003eif (IsValidPassword($username, $password) == 1)\n                  \u003cxhtml:br/\u003e{\n                  \u003cxhtml:div style=\"margin-left:10px;\"\u003eprint \"Login Successful\";\n                  \u003c/xhtml:div\u003e}\n                  \u003cxhtml:br/\u003eelse\n                  \u003cxhtml:br/\u003e{\n                  \u003cxhtml:div style=\"margin-left:10px;\"\u003eprint \"Login Failed - incorrect password\";\n                  \u003c/xhtml:div\u003e}\n                  \u003c/xhtml:div\u003e}\n                  \u003cxhtml:br/\u003eelse\n                  \u003cxhtml:br/\u003e{\n                  \u003cxhtml:div style=\"margin-left:10px;\"\u003eprint \"Login Failed - unknown username\";\n                  \u003c/xhtml:div\u003e}\n                  \u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eIn the above code, there are different messages for when an incorrect username is supplied, versus when the username is correct but the password is wrong. This difference enables a potential attacker to understand the state of the login function, and could allow an attacker to discover a valid username by trying different values until the incorrect password message is returned. In essence, this makes it easier for an attacker to obtain half of the necessary authentication credentials.\u003c/Body_Text\u003e\n               \u003cBody_Text\u003eWhile this type of information may be helpful to a user, it is also useful to a potential attacker. In the above example, the message for both failed cases should be the same, such as:\u003c/Body_Text\u003e\n               \u003cExample_Code Nature=\"result\"\u003e\n                  \u003cxhtml:div\u003e\"Login Failed - incorrect username or password\"\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n            "
    },
    {
      "text": "\n               \u003cIntro_Text\u003eNon-uniform processing time causes timing channel.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\"\u003eSuppose an algorithm for implementing an encryption routine works fine per se, but the time taken to output the result of the encryption routine depends on a relationship between the input plaintext and the key (e.g., suppose, if the plaintext is similar to the key, it would run very fast).\u003c/Example_Code\u003e\n               \u003cBody_Text\u003eIn the example above, an attacker may vary the inputs, then observe differences between processing times (since different plaintexts take different time). This could be used to infer information about the key.\u003c/Body_Text\u003e\n               \u003cExample_Code Nature=\"good\"\u003eArtificial delays may be added to ensured all calculations take equal time to execute.\u003c/Example_Code\u003e\n            "
    },
    {
      "text": "\n               \u003cIntro_Text\u003eSuppose memory access patterns for an encryption routine are dependent on the secret key.\u003c/Intro_Text\u003e\n               \u003cBody_Text\u003eAn attacker can recover the key by knowing if specific memory locations have been accessed or not.  The value stored at those memory locations is irrelevant.  The encryption routine's memory accesses will affect the state of the processor cache.  If cache resources are shared across contexts, after the encryption routine completes, an attacker in different execution context can discover which memory locations the routine accessed by measuring the time it takes for their own memory accesses to complete.\u003c/Body_Text\u003e\n            "
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2020-8695",
      "description": "Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695"
    },
    {
      "reference": "CVE-2002-2094",
      "description": "This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-2094"
    },
    {
      "reference": "CVE-2001-1483",
      "description": "Enumeration of valid usernames based on inconsistent responses",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1483"
    },
    {
      "reference": "CVE-2001-1528",
      "description": "Account number enumeration via inconsistent responses.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1528"
    },
    {
      "reference": "CVE-2004-2150",
      "description": "User enumeration via discrepancies in error messages.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2150"
    },
    {
      "reference": "CVE-2005-1650",
      "description": "User enumeration via discrepancies in error messages.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1650"
    },
    {
      "reference": "CVE-2004-0294",
      "description": "Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0294"
    },
    {
      "reference": "CVE-2004-0243",
      "description": "Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0243"
    },
    {
      "reference": "CVE-2002-0514",
      "description": "Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0514"
    },
    {
      "reference": "CVE-2002-0515",
      "description": "Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0515"
    },
    {
      "reference": "CVE-2002-0208",
      "description": "Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0208"
    },
    {
      "reference": "CVE-2004-2252",
      "description": "Behavioral infoleak by responding to SYN-FIN packets.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2252"
    },
    {
      "reference": "CVE-2001-1387",
      "description": "Product may generate different responses than specified by the administrator, possibly leading to an information leak.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1387"
    },
    {
      "reference": "CVE-2004-0778",
      "description": "Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0778"
    },
    {
      "reference": "CVE-2004-1428",
      "description": "FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1428"
    },
    {
      "reference": "CVE-2003-0078",
      "description": "SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0078"
    },
    {
      "reference": "CVE-2000-1117",
      "description": "Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1117"
    },
    {
      "reference": "CVE-2003-0637",
      "description": "Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0637"
    },
    {
      "reference": "CVE-2003-0190",
      "description": "Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0190"
    },
    {
      "reference": "CVE-2004-1602",
      "description": "FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1602"
    },
    {
      "reference": "CVE-2005-0918",
      "description": "Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0918"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "PLOVER",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-12-28T00:00:00Z",
        "modification_comment": "updated Description, Name"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, Observed_Examples, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-06-20T00:00:00Z",
        "modification_comment": "updated Relationships, Type"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Alternate_Terms, Applicable_Platforms, Common_Consequences, Demonstrative_Examples, Description, Name, Observed_Examples, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-08-20T00:00:00Z",
        "modification_comment": "updated Alternate_Terms, Common_Consequences, Demonstrative_Examples, Description, Name, Potential_Mitigations, Related_Attack_Patterns, Relationships, Research_Gaps"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-12-10T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, Description, Name, Potential_Mitigations, Research_Gaps"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-07-20T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-10-28T00:00:00Z",
        "modification_comment": "updated Observed_Examples"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Discrepancy Information Leaks",
        "date": "2009-12-28T00:00:00Z"
      },
      {
        "text": "Information Exposure Through Discrepancy",
        "date": "2020-02-24T00:00:00Z"
      },
      {
        "text": "Observable Discrepancy",
        "date": "2020-08-20T00:00:00Z"
      },
      {
        "text": "Observable Differences in Behavior to Error Inputs",
        "date": "2020-12-10T00:00:00Z"
      }
    ],
    "contribution": [
      {
        "type": "Content",
        "contribution_name": "Nicole Fern",
        "contribution_organization": "Tortuga Logic",
        "contribution_date": "2020-06-03T00:00:00Z",
        "contribution_comment": "Provided Demonstrative Example for cache timing attack"
      }
    ]
  },
  "alternate_terms": [
    {
      "term": "Side Channel Attack",
      "description": "Observable Discrepancies are at the root of side channel attacks."
    }
  ],
  "taxonomy_mappings": [
    {
      "taxonomy_name": "PLOVER",
      "entry_name": "Discrepancy Information Leaks"
    },
    {
      "taxonomy_name": "OWASP Top Ten 2007",
      "entry_name": "Information Leakage and Improper Error Handling",
      "entry_id": "A6",
      "mapping_fit": "CWE More Specific"
    },
    {
      "taxonomy_name": "OWASP Top Ten 2004",
      "entry_name": "Improper Error Handling",
      "entry_id": "A7",
      "mapping_fit": "CWE More Specific"
    }
  ],
  "related_attack_patterns": [
    "189"
  ]
}
