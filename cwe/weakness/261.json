{
  "id": "261",
  "name": "Weak Encoding for Password",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "Obscuring a password with a trivial encoding does not protect the password.",
  "extended_description": "Password management issues occur when a password is stored in plaintext in an application's properties or configuration file. A programmer can attempt to remedy the password management problem by obscuring the password with an encoding function, such as base 64 encoding, but this effort does not adequately protect the password.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "287",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "326",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design",
      "note": [
        "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Access Control"
      ],
      "impact": [
        "Gain Privileges or Assume Identity"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "description": [
        "Passwords should be encrypted with keys that are at least 128 bits in length for adequate security."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               \u003cIntro_Text\u003eThe following code reads a password from a properties file and uses the password to connect to a database.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Java\"\u003e\n                  \u003cxhtml:div\u003e...\u003cxhtml:br/\u003eProperties prop = new Properties();\u003cxhtml:br/\u003eprop.load(new FileInputStream(\"config.properties\"));\u003cxhtml:br/\u003eString password = Base64.decode(prop.getProperty(\"password\"));\u003cxhtml:br/\u003eDriverManager.getConnection(url, usr, password);\u003cxhtml:br/\u003e...\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis code will run successfully, but anyone with access to config.properties can read the value of password and easily determine that the value has been base 64 encoded. If a devious employee has access to this information, they can use it to break into the system.\u003c/Body_Text\u003e\n            "
    },
    {
      "text": "\n               \u003cIntro_Text\u003eThe following code reads a password from the registry and uses the password to create a new network credential.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C#\"\u003e\n                  \u003cxhtml:div\u003e...\u003cxhtml:br/\u003estring value = regKey.GetValue(passKey).ToString();\u003cxhtml:br/\u003ebyte[] decVal = Convert.FromBase64String(value);\u003cxhtml:br/\u003eNetworkCredential netCred = newNetworkCredential(username,decVal.toString(),domain);\u003cxhtml:br/\u003e...\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis code will run successfully, but anyone who has access to the registry key used to store the password can read the value of password. If a devious employee has access to this information, they can use it to break into the system.\u003c/Body_Text\u003e\n            "
    }
  ],
  "references": [
    {
      "reference_id": "REF-6",
      "author": [
        "Katrina Tsipenyuk",
        "Brian Chess",
        "Gary McGraw"
      ],
      "title": "Seven Pernicious Kingdoms: A Taxonomy of Software Security Errors",
      "url": "https://samate.nist.gov/SSATTM_Content/papers/Seven%20Pernicious%20Kingdoms%20-%20Taxonomy%20of%20Sw%20Security%20Errors%20-%20Tsipenyuk%20-%20Chess%20-%20McGraw.pdf",
      "publication_year": "2005",
      "publication_month": "--11",
      "publication_day": "---07",
      "publication": "NIST Workshop on Software Security Assurance Tools Techniques and Metrics",
      "publisher": "NIST"
    },
    {
      "reference_id": "REF-207",
      "author": [
        "John Viega",
        "Gary McGraw"
      ],
      "title": "Building Secure Software: How to Avoid Security Problems the Right Way",
      "publication_year": "2002",
      "publisher": "Addison-Wesley",
      "edition": "1st Edition"
    },
    {
      "section": "\"Sin 19: Use of Weak Password-Based Systems.\" Page 279",
      "reference_id": "REF-44",
      "author": [
        "Michael Howard",
        "David LeBlanc",
        "John Viega"
      ],
      "title": "24 Deadly Sins of Software Security",
      "publication_year": "2010",
      "publication": "McGraw-Hill"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "7 Pernicious Kingdoms",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_organization": "Veracode",
        "modification_date": "2008-08-15T00:00:00Z",
        "modification_comment": "Suggested OWASP Top Ten 2004 mapping"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Relationships, Other_Notes, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-07-27T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-03-29T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2015-12-07T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Modes_of_Introduction, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Description, Name, Other_Notes, References, Relationships, Type"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-10-28T00:00:00Z",
        "modification_comment": "updated Relationships"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Weak Cryptography for Passwords",
        "date": "2020-02-24T00:00:00Z"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "7 Pernicious Kingdoms",
      "entry_name": "Password Management: Weak Cryptography"
    },
    {
      "taxonomy_name": "OWASP Top Ten 2004",
      "entry_name": "Insecure Storage",
      "entry_id": "A8",
      "mapping_fit": "CWE More Specific"
    }
  ],
  "related_attack_patterns": [
    "55"
  ],
  "notes": [
    {
      "type": "Other",
      "text": "\n               \u003cxhtml:p\u003eThe \"crypt\" family of functions uses weak cryptographic algorithms and should be avoided. It may be present in some projects for compatibility.\u003c/xhtml:p\u003e\n            "
    }
  ]
}
