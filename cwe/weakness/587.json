{
  "id": "587",
  "name": "Assignment of a Fixed Address to a Pointer",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Draft",
  "description": "The software sets a pointer to a specific address other than NULL or 0.",
  "extended_description": "Using a fixed address is not portable, because that address will probably not be valid in all environments or platforms.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "344",
      "view_id": "1000"
    },
    {
      "nature": "ChildOf",
      "cweid": "758",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "prevalence": "Undetermined",
        "name": "C"
      },
      {
        "prevalence": "Undetermined",
        "name": "C++"
      },
      {
        "prevalence": "Undetermined",
        "name": "C#"
      },
      {
        "class": "Assembly",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Integrity",
        "Confidentiality",
        "Availability"
      ],
      "impact": [
        "Execute Unauthorized Code or Commands"
      ],
      "note": "If one executes code at a known location, an attacker might be able to inject code there beforehand."
    },
    {
      "scope": [
        "Availability"
      ],
      "impact": [
        "DoS: Crash, Exit, or Restart",
        "Reduce Maintainability",
        "Reduce Reliability"
      ],
      "note": "If the code is ported to another platform or environment, the pointer is likely to be invalid and cause a crash."
    },
    {
      "scope": [
        "Confidentiality",
        "Integrity"
      ],
      "impact": [
        "Read Memory",
        "Modify Memory"
      ],
      "note": "The data at a known pointer location can be easily read or influenced by an attacker."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Never set a pointer to a fixed address."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               \u003cIntro_Text\u003eThis code assumes a particular function will always be found at a particular address. It assigns a pointer to that address and calls the function.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C\"\u003e\n                  \u003cxhtml:div\u003eint (*pt2Function) (float, char, char)=0x08040000;\u003cxhtml:br/\u003eint result2 = (*pt2Function) (12, 'a', 'b');\u003cxhtml:br/\u003e\n                     \u003cxhtml:i\u003e// Here we can inject code to execute.\u003c/xhtml:i\u003e\n                     \u003cxhtml:br/\u003e\n                  \u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThe same function may not always be found at the same memory address. This could lead to a crash, or an attacker may alter the memory at the expected address, leading to arbitrary code execution.\u003c/Body_Text\u003e\n            "
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2006-12-15T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Time_of_Introduction"
      },
      {
        "modification_organization": "KDM Analytics",
        "modification_date": "2008-08-01T00:00:00Z",
        "modification_comment": "added/updated white box definitions"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Description, Relationships, Other_Notes, Weakness_Ordinalities"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-11-24T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-03-10T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-07-27T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Description, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-09-13T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Taxonomy_Mappings, White_Box_Definitions"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-01-03T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-03-15T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Weakness_Ordinalities"
      }
    ]
  },
  "weakness_ordinalities": [
    {
      "ordinality": "Indirect"
    }
  ],
  "taxonomy_mappings": [
    {
      "taxonomy_name": "CERT C Secure Coding",
      "entry_name": "Converting a pointer to integer or integer to pointer",
      "entry_id": "INT36-C",
      "mapping_fit": "Imprecise"
    },
    {
      "taxonomy_name": "Software Fault Patterns",
      "entry_name": "Glitch in computation",
      "entry_id": "SFP1"
    }
  ]
}
