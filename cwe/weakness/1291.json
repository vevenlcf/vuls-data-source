{
  "id": "1291",
  "name": "Public Key Re-Use for Signing both Debug and Production Code",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Draft",
  "description": "The same public key is used for signing both debug and production code.",
  "extended_description": "\n\t\t\t\t\u003cxhtml:p\u003eA common usage of public-key cryptography is to verify the integrity and authenticity of another entity (for example a firmware binary). If a company wants to ensure that its firmware runs only on its own hardware, before the firmware runs, an encrypted hash of the firmware image will be decrypted with the public key and then verified against the now-computed hash of the firmware image. This means that the public key forms the root of trust, which necessitates that the public key itself must be protected and used properly.\u003c/xhtml:p\u003e\n\t\t\t\t\u003cxhtml:p\u003eDuring the development phase, debug firmware enables many hardware debug hooks, debug modes, and debug messages for testing. Those debug facilities provide significant, additional views about the firmwareâ€™s capability and, in some cases, additional capability into the chip or SoC. If compromised, these capabilities could be exploited by an attacker to take full control of the system.\u003c/xhtml:p\u003e\n\t\t\t\t\u003cxhtml:p\u003eOnce the product exits the manufacturing stage and enters production, it is good practice to use a different public key. Debug firmware images are known to leak. With the debug key being reused as the production key, the debug image will also work on the production image. Thus, it will open all the internal, debug capabilities to the attacker.\u003c/xhtml:p\u003e\n\t\t\t\t\u003cxhtml:p\u003eIf a different public key is used for the production image, even if the attacker gains access to the debug firmware image, they will not be able to run it on a production machine. Thus, damage will be limited to the intellectual property leakage resulting from the debug image.\u003c/xhtml:p\u003e\n\t\t\t",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "693",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "PeerOf",
      "cweid": "321",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Technology-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "operating_system": [
      {
        "class": "OS-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "architecture": [
      {
        "class": "Architecture-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Integrity",
        "Availability",
        "Access Control",
        "Accountability",
        "Authentication",
        "Authorization",
        "Non-Repudiation",
        "Other"
      ],
      "impact": [
        "Read Memory",
        "Modify Memory",
        "Execute Unauthorized Code or Commands",
        "Gain Privileges or Assume Identity",
        "Varies by Context"
      ],
      "likelihood": "High"
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Use different keys for Production and Debug"
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n\t\t\t\t\t\u003cIntro_Text\u003eThis example illustrates the danger of using the same public key for debug and production.\u003c/Intro_Text\u003e\n\t\t\t\t\t\u003cExample_Code Nature=\"bad\" Language=\"Other\"\u003e\n\t\t\t\t\t    \u003cxhtml:div/\u003eSuppose the product design requires frugality of silicon real estate. Assume that originally the architecture allows just enough storage for two 2048-bit RSA keys in the fuse: one to be used for debug and the other for production. However, in the meantime, a business decision is taken to make the security future-proof beyond 2030, which means the architecture needs to use the NIST-recommended 3072-bit keys instead of the originally-planned 2048-bit keys. This means that, at most, one key can be fully stored in the fuses, not two. So the product design team decides to use the same public key for debug and production.\u003c/Example_Code\u003e\n\t\t\t\t\t\u003cExample_Code Nature=\"informative\" Language=\"Other\"\u003e\n\t\t\t\t\t    \u003cxhtml:div/\u003eIncrease the storage so that two different keys of the required size can be stored.\u003c/Example_Code\u003e\n\t\t\t\t"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "Parbati Kumar Manna, Hareesh Khattri, Arun Kanuparthi",
      "submission_organization": "Intel Corporation",
      "submission_date": "2020-05-26T00:00:00Z"
    }
  },
  "detection_methods": [
    {
      "method": "Architecture or Design Review",
      "description": "\n\t\t\t\t\t\t\u003cxhtml:p\u003eCompare the debug key with the production key to make sure that they are not the same.\u003c/xhtml:p\u003e\n\t\t\t\t\t",
      "effectiveness": "High"
    },
    {
      "method": "Dynamic Analysis with Manual Results Interpretation",
      "description": "\n\t\t\t\t\t\t\u003cxhtml:p\u003eCompare the debug key with the production key to make sure that they are not the same.\u003c/xhtml:p\u003e\n\t\t\t\t\t",
      "effectiveness": "High"
    }
  ]
}
