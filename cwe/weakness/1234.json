{
  "id": "1234",
  "name": "Hardware Internal or Debug Modes Allow Override of Locks",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "System configuration protection may be bypassed during debug mode.",
  "extended_description": "\n     \t\u003cxhtml:p\u003eDevice configuration controls are commonly programmed after a device power reset by a trusted firmware or software module (e.g., BIOS/bootloader) and then locked from any further modification. This is commonly implemented using a trusted lock bit, which when set, disables writes to a protected set of registers or address regions. The lock protection is intended to prevent modification of certain system configuration (e.g., memory/memory protection unit configuration). If debug features supported by hardware or internal modes/system states are supported in the hardware design, modification of the lock protection may be allowed allowing access and modification of configuration information.\u003c/xhtml:p\u003e\n\t\t",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "667",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Technology-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "operating_system": [
      {
        "class": "OS-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "architecture": [
      {
        "class": "Architecture-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Access Control"
      ],
      "impact": [
        "Bypass Protection Mechanism"
      ],
      "note": "Bypass of lock bit allows access and modification of system configuration even when the lock bit is set.",
      "likelihood": "High"
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design",
        "Implementation",
        "Testing"
      ],
      "description": [
        "\n         \u003cxhtml:ul\u003e\n          \u003cxhtml:li\u003eSecurity Lock bit protections should be reviewed for any bypass/override modes supported.\u003c/xhtml:li\u003e\n          \u003cxhtml:li\u003eAny supported override modes either should be removed or protected using authenticated debug modes.\u003c/xhtml:li\u003e\n          \u003cxhtml:li\u003eSecurity lock programming flow and lock properties should be tested in pre-silicon and post-silicon testing.\u003c/xhtml:li\u003e\n        \u003c/xhtml:ul\u003e\n       "
      ],
      "effectiveness": "High"
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n       \u003cIntro_Text\u003e\n         For example, consider the example Locked_override_register example. This register module supports a lock mode that blocks any writes after lock is set to 1.\n        \u003cxhtml:br/\u003e\n         However, it also allows override of the lock protection when scan_mode or debug_unlocked modes are active.\n       \u003c/Intro_Text\u003e\n        \u003cExample_Code Nature=\"bad\" Language=\"Verilog\"\u003e\n          \u003cxhtml:p\u003emodule Locked_register_example\u003c/xhtml:p\u003e\n          \u003cxhtml:p\u003e(\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput [15:0] Data_in,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput Clk,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput resetn,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput write,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput Lock,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput scan_mode,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003einput debug_unlocked,\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eoutput reg [15:0] Data_out\u003c/xhtml:p\u003e\n          \u003cxhtml:p\u003e);\u003c/xhtml:p\u003e\n          \u003cxhtml:p/\u003e\n          \u003cxhtml:p\u003ereg lock_status;\u003c/xhtml:p\u003e\n          \u003cxhtml:p/\u003e\n          \u003cxhtml:p\u003ealways @(posedge Clk or negedge resetn)\u003c/xhtml:p\u003e\n          \u003cxhtml:p\u003eif (~resetn) // Register is reset resetn\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003elock_status \u0026lt;= 1'b0;\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eelse if (Lock)\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003elock_status \u0026lt;= 1'b1;\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eelse if (~Lock)\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003elock_status \u0026lt;= lock_status\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p/\u003e\n          \u003cxhtml:p\u003ealways @(posedge Clk or negedge resetn)\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eif (~resetn) // Register is reset resetn\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003eData_out \u0026lt;= 16'h0000;\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eelse if (write \u0026amp; (~lock_status | scan_mode | debug_unlocked) ) // Register protected by Lock bit input, overrides supported for scan_mode \u0026amp; debug_unlocked\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003eData_out \u0026lt;= Data_in;\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eelse if (~write)\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003ebegin\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 30px;\"\u003eData_out \u0026lt;= Data_out;\u003c/xhtml:p\u003e\n          \u003cxhtml:p style=\"text-indent: 15px;\"\u003eend\u003c/xhtml:p\u003e\n          \u003cxhtml:p/\u003e\n          \u003cxhtml:p\u003eendmodule\u003c/xhtml:p\u003e\n       \u003c/Example_Code\u003e\n        \u003cBody_Text\u003eIf either the scan_mode or the debug_unlocked modes can be triggered by software, then the lock protection may be bypassed.\u003c/Body_Text\u003e\n        \u003cExample_Code Nature=\"good\"\u003e\n          Either remove the debug and scan mode overrides or protect enabling of these modes so that only trusted and authorized users may enable these modes.\n       \u003c/Example_Code\u003e\n     "
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi",
      "submission_organization": "Intel Corporation",
      "submission_date": "2020-01-15T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-08-20T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, Description, Modes_of_Introduction, Potential_Mitigations, Related_Attack_Patterns"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2022-04-28T00:00:00Z",
        "modification_comment": "updated Related_Attack_Patterns"
      }
    ]
  },
  "related_attack_patterns": [
    "176"
  ]
}
