{
  "id": "182",
  "name": "Collapse of Data into Unsafe Value",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Draft",
  "description": "The software filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "693",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "CanPrecede",
      "cweid": "33",
      "view_id": "1000"
    },
    {
      "nature": "CanPrecede",
      "cweid": "34",
      "view_id": "1000"
    },
    {
      "nature": "CanPrecede",
      "cweid": "35",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Access Control"
      ],
      "impact": [
        "Bypass Protection Mechanism"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "mitigation_id": "MIT-44",
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
      ],
      "strategy": "Input Validation"
    },
    {
      "mitigation_id": "MIT-5",
      "phase": [
        "Implementation"
      ],
      "description": [
        "\n                  \u003cxhtml:p\u003eAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eDo not rely exclusively on looking for malicious or malformed inputs.  This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\u003c/xhtml:p\u003e\n               "
      ],
      "strategy": "Input Validation"
    },
    {
      "mitigation_id": "MIT-20",
      "phase": [
        "Implementation"
      ],
      "description": [
        "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."
      ],
      "strategy": "Input Validation"
    },
    {
      "description": [
        "Canonicalize the name to match that of the file system's representation of the name. This can sometimes be achieved with an available API (e.g. in Win32 the GetFullPathName function)."
      ]
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2004-0815",
      "description": "\"/.////\" in pathname collapses to absolute path.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0815"
    },
    {
      "reference": "CVE-2005-3123",
      "description": "\"/.//..//////././\" is collapsed into \"/.././\" after \"..\" and \"//\" sequences are removed.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3123"
    },
    {
      "reference": "CVE-2002-0325",
      "description": "\".../...//\" collapsed to \"...\" due to removal of \"./\" in web server.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0325"
    },
    {
      "reference": "CVE-2002-0784",
      "description": "chain: HTTP server protects against \"..\" but allows \".\" variants such as \"////./../.../\". If the server removes \"/..\" sequences, the result would collapse into an unsafe value \"////../\" (CWE-182).",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0784"
    },
    {
      "reference": "CVE-2005-2169",
      "description": "MFV. Regular expression intended to protect against directory traversal reduces \".../...//\" to \"../\".",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2169"
    },
    {
      "reference": "CVE-2001-1157",
      "description": "XSS protection mechanism strips a \u003cscript\u003e sequence that is nested in another \u003cscript\u003e sequence.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1157"
    }
  ],
  "references": [
    {
      "section": "Chapter 8, \"Character Stripping Vulnerabilities\", Page 437",
      "reference_id": "REF-62",
      "author": [
        "Mark Dowd",
        "John McDonald",
        "Justin Schuh"
      ],
      "title": "The Art of Software Security Assessment",
      "publication_year": "2006",
      "publisher": "Addison Wesley",
      "edition": "1st Edition"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "PLOVER",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Description, Relationships, Relationship_Notes, Relevant_Properties, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-11-24T00:00:00Z",
        "modification_comment": "updated Observed_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-03-10T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-07-27T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-06-21T00:00:00Z",
        "modification_comment": "updated Description, Observed_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-12-13T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-03-29T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated References, Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Relevant_Properties"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-01-03T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-06-25T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "PLOVER",
      "entry_name": "Collapse of Data into Unsafe Value"
    },
    {
      "taxonomy_name": "The CERT Oracle Secure Coding Standard for Java (2011)",
      "entry_name": "Eliminate noncharacter code points before validation",
      "entry_id": "IDS11-J"
    }
  ],
  "notes": [
    {
      "type": "Relationship",
      "text": "Overlaps regular expressions, although an implementation might not necessarily use regexp's."
    }
  ]
}
