{
  "id": "291",
  "name": "Reliance on IP Address for Authentication",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software uses an IP address for authentication.",
  "extended_description": "IP addresses can be easily spoofed. Attackers can forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "290",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "923",
      "view_id": "1000"
    },
    {
      "nature": "ChildOf",
      "cweid": "471",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design",
      "note": [
        "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."
      ]
    }
  ],
  "likelihood_of_exploit": "High",
  "common_consequences": [
    {
      "scope": [
        "Access Control",
        "Non-Repudiation"
      ],
      "impact": [
        "Hide Activities",
        "Gain Privileges or Assume Identity"
      ],
      "note": "Malicious users can fake authentication information, impersonating any IP address."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-99",
      "text": "\n               \u003cIntro_Text\u003eBoth of these examples check if a request is from a trusted address before responding to the request.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"C\"\u003e\n                  \u003cxhtml:div\u003esd = socket(AF_INET, SOCK_DGRAM, 0);\u003cxhtml:br/\u003eserv.sin_family = AF_INET;\u003cxhtml:br/\u003eserv.sin_addr.s_addr = htonl(INADDR_ANY);\u003cxhtml:br/\u003eservr.sin_port = htons(1008);\u003cxhtml:br/\u003ebind(sd, (struct sockaddr *) \u0026amp; serv, sizeof(serv));\u003cxhtml:br/\u003e\n                     \u003cxhtml:br/\u003ewhile (1) {\u003cxhtml:div style=\"margin-left:10px;\"\u003ememset(msg, 0x0, MAX_MSG);\u003cxhtml:br/\u003eclilen = sizeof(cli);\u003cxhtml:br/\u003eif (inet_ntoa(cli.sin_addr)==getTrustedAddress()) {\u003cxhtml:div style=\"margin-left:10px;\"\u003en = recvfrom(sd, msg, MAX_MSG, 0, (struct sockaddr *) \u0026amp; cli, \u0026amp;clilen);\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Java\"\u003e\n                  \u003cxhtml:div\u003ewhile(true) {\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003eDatagramPacket rp=new DatagramPacket(rData,rData.length);\u003cxhtml:br/\u003eoutSock.receive(rp);\u003cxhtml:br/\u003eString in = new String(p.getData(),0, rp.getLength());\u003cxhtml:br/\u003eInetAddress clientIPAddress = rp.getAddress();\u003cxhtml:br/\u003eint port = rp.getPort();\u003cxhtml:br/\u003e\n                           \u003cxhtml:br/\u003eif (isTrustedAddress(clientIPAddress) \u0026amp; secretKey.equals(in)) {\u003cxhtml:div style=\"margin-left:10px;\"\u003eout = secret.getBytes();\u003cxhtml:br/\u003eDatagramPacket sp =new DatagramPacket(out,out.length, IPAddress, port); outSock.send(sp);\u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e}\u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThe code only verifies the address as stored in the request packet. An attacker can spoof this address, thus impersonating a trusted client.\u003c/Body_Text\u003e\n            "
    }
  ],
  "references": [
    {
      "reference_id": "REF-18",
      "author": [
        "Secure Software, Inc."
      ],
      "title": "The CLASP Application Security Process",
      "url": "https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf",
      "publication_year": "2005"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CLASP",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings, Weakness_Ordinalities"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-02-16T00:00:00Z",
        "modification_comment": "updated Description, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Demonstrative_Examples, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2013-06-23T00:00:00Z",
        "modification_comment": "Changed type from composite to weakness.",
        "modification_importance": "Critical"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2013-07-17T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Description, Name, Relationships, Type"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-02-18T00:00:00Z",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Causal_Nature, Demonstrative_Examples, Modes_of_Introduction, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated References, Relationships"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Trusting Self-reported IP Address",
        "date": "2013-07-17T00:00:00Z"
      }
    ]
  },
  "weakness_ordinalities": [
    {
      "ordinality": "Resultant"
    }
  ],
  "taxonomy_mappings": [
    {
      "taxonomy_name": "CLASP",
      "entry_name": "Trusting self-reported IP address"
    }
  ],
  "related_attack_patterns": [
    "4"
  ]
}
