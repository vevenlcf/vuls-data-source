{
  "id": "158",
  "name": "Improper Neutralization of Null Byte or NUL Character",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.",
  "extended_description": "As data is parsed, an injected NUL character or null byte may cause the software to believe the input is terminated earlier than it actually is, or otherwise cause the input to be misinterpreted. This could then be used to inject potentially dangerous input that occurs after the null byte or otherwise bypass validation routines and other protection mechanisms.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "138",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Integrity"
      ],
      "impact": [
        "Unexpected State"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "description": [
        "Developers should anticipate that null characters or null bytes will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by the system."
      ]
    },
    {
      "mitigation_id": "MIT-5",
      "phase": [
        "Implementation"
      ],
      "description": [
        "\n                  \u003cxhtml:p\u003eAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\u003c/xhtml:p\u003e\n                  \u003cxhtml:p\u003eDo not rely exclusively on looking for malicious or malformed inputs.  This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\u003c/xhtml:p\u003e\n               "
      ],
      "strategy": "Input Validation"
    },
    {
      "mitigation_id": "MIT-20",
      "phase": [
        "Implementation"
      ],
      "description": [
        "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."
      ],
      "strategy": "Input Validation"
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2008-1284",
      "description": "NUL byte in theme name causes directory traversal impact to be worse",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1284"
    },
    {
      "reference": "CVE-2005-2008",
      "description": "Source code disclosure using trailing null.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2008"
    },
    {
      "reference": "CVE-2005-3293",
      "description": "Source code disclosure using trailing null.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3293"
    },
    {
      "reference": "CVE-2005-2061",
      "description": "Trailing null allows file include.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2061"
    },
    {
      "reference": "CVE-2002-1774",
      "description": "Null character in MIME header allows detection bypass.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1774"
    },
    {
      "reference": "CVE-2000-0149",
      "description": "Web server allows remote attackers to view the source code for CGI programs via a null character (%00) at the end of a URL.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0149"
    },
    {
      "reference": "CVE-2000-0671",
      "description": "Web server earlier allows allows remote attackers to bypass access restrictions, list directory contents, and read source code by inserting a null character (%00) in the URL.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0671"
    },
    {
      "reference": "CVE-2001-0738",
      "description": "Logging system allows an attacker to cause a denial of service (hang) by causing null bytes to be placed in log messages.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0738"
    },
    {
      "reference": "CVE-2001-1140",
      "description": "Web server allows source code for executable programs to be read via a null character (%00) at the end of a request.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1140"
    },
    {
      "reference": "CVE-2002-1031",
      "description": "Protection mechanism for limiting file access can be bypassed using a null character (%00) at the end of the directory name.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1031"
    },
    {
      "reference": "CVE-2002-1025",
      "description": "Application server allows remote attackers to read JSP source code via an encoded null byte in an HTTP GET request, which causes the server to send the .JSP file unparsed.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1025"
    },
    {
      "reference": "CVE-2003-0768",
      "description": "XSS protection mechanism only checks for sequences with an alphabetical character following a (\u003c), so a non-alphabetical or null character (%00) following a \u003c may be processed.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0768"
    },
    {
      "reference": "CVE-2004-0189",
      "description": "Decoding function in proxy allows regular expression bypass in ACLs via URLs with null characters.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0189"
    },
    {
      "reference": "CVE-2005-3153",
      "description": "Null byte bypasses PHP regexp check (interaction error).",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3153"
    },
    {
      "reference": "CVE-2005-4155",
      "description": "Null byte bypasses PHP regexp check (interaction error).",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4155"
    }
  ],
  "references": [
    {
      "section": "Chapter 8, \"NUL Character Injection\", Page 411",
      "reference_id": "REF-62",
      "author": [
        "Mark Dowd",
        "John McDonald",
        "Justin Schuh"
      ],
      "title": "The Art of Software Security Assessment",
      "publication_year": "2006",
      "publisher": "Addison Wesley",
      "edition": "1st Edition"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "PLOVER",
      "submission_date": "2006-07-19T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08T00:00:00Z",
        "modification_comment": "updated Relationships, Relationship_Notes, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-10-14T00:00:00Z",
        "modification_comment": "updated Description"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-11-24T00:00:00Z",
        "modification_comment": "updated Observed_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-07-27T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-02-16T00:00:00Z",
        "modification_comment": "updated Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-04-05T00:00:00Z",
        "modification_comment": "updated Description, Name"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-03-29T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-27T00:00:00Z",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11T00:00:00Z",
        "modification_comment": "updated Observed_Examples, References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30T00:00:00Z",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-05-03T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Potential_Mitigations, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-06-25T00:00:00Z",
        "modification_comment": "updated Observed_Examples, Potential_Mitigations"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Null Character / Null Byte",
        "date": "2008-01-30T00:00:00Z"
      },
      {
        "text": "Failure to Remove Null Character / Null Byte",
        "date": "2008-04-11T00:00:00Z"
      },
      {
        "text": "Failure to Sanitize Null Byte or NUL Character",
        "date": "2010-04-05T00:00:00Z"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "PLOVER",
      "entry_name": "Null Character / Null Byte"
    },
    {
      "taxonomy_name": "WASC",
      "entry_name": "Null Byte Injection",
      "entry_id": "28"
    },
    {
      "taxonomy_name": "Software Fault Patterns",
      "entry_name": "Tainted input to command",
      "entry_id": "SFP24"
    }
  ],
  "related_attack_patterns": [
    "52",
    "53"
  ],
  "notes": [
    {
      "type": "Relationship",
      "text": "This can be a factor in multiple interpretation errors, other interaction errors, filename equivalence, etc."
    }
  ]
}
