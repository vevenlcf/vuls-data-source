{
  "id": "941",
  "name": "Incorrectly Specified Destination in a Communication Channel",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The software creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",
  "extended_description": "\n            \u003cxhtml:p\u003eAttackers at the destination may be able to spoof trusted servers to steal data or cause a denial of service.\u003c/xhtml:p\u003e\n            \u003cxhtml:p\u003eThere are at least two distinct weaknesses that can cause the software to communicate with an unintended destination:\u003c/xhtml:p\u003e\n            \u003cxhtml:div style=\"margin-left:10px;\"\u003e\n               \u003cxhtml:ul\u003e\n                  \u003cxhtml:li\u003eIf the software allows an attacker to control which destination is specified, then the attacker can cause it to connect to an untrusted or malicious destination. For example, because UDP is a connectionless protocol, UDP packets can be spoofed by specifying a false source address in the packet; when the server receives the packet and sends a reply, it will specify a destination by using the source of the incoming packet - i.e., the false source. The server can then be tricked into sending traffic to the wrong host, which is effective for hiding the real source of an attack and for conducting a distributed denial of service (DDoS). As another example, server-side request forgery (SSRF) and XML External Entity (XXE) can be used to trick a server into making outgoing requests to hosts that cannot be directly accessed by the attacker due to firewall restrictions.\u003c/xhtml:li\u003e\n                  \u003cxhtml:li\u003eIf the software incorrectly specifies the destination, then an attacker who can control this destination might be able to spoof trusted servers. While the most common occurrence is likely due to misconfiguration by an administrator, this can be resultant from other weaknesses. For example, the software might incorrectly parse an e-mail or IP address and send sensitive data to an unintended destination. As another example, an Android application may use a \"sticky broadcast\" to communicate with a receiver for a particular application, but since sticky broadcasts can be processed by *any* receiver, this can allow a malicious application to access restricted data that was only intended for a different application.\u003c/xhtml:li\u003e\n               \u003c/xhtml:ul\u003e\n            \u003c/xhtml:div\u003e\n         ",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "923",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "CanPrecede",
      "cweid": "406",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Language-Independent",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Mobile",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation",
      "note": [
        "REALIZATION: This weakness is caused during implementation of an architectural security tactic."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-113",
      "text": "\n               \u003cIntro_Text\u003eThis code listens on a port for DNS requests and sends the result to the requesting address.\u003c/Intro_Text\u003e\n               \u003cExample_Code Nature=\"bad\" Language=\"Python\"\u003e\n                  \u003cxhtml:div\u003esock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\u003cxhtml:br/\u003esock.bind( (UDP_IP,UDP_PORT) )\u003cxhtml:br/\u003ewhile true:\u003cxhtml:div style=\"margin-left:10px;\"\u003e\n                        \u003cxhtml:div\u003edata = sock.recvfrom(1024)\u003cxhtml:br/\u003eif not data:\u003cxhtml:div style=\"margin-left:10px;\"\u003ebreak\u003c/xhtml:div\u003e\n                           \u003cxhtml:br/\u003e(requestIP, nameToResolve) = parseUDPpacket(data)\u003cxhtml:br/\u003erecord = resolveName(nameToResolve)\u003cxhtml:br/\u003esendResponse(requestIP,record)\u003c/xhtml:div\u003e\n                     \u003c/xhtml:div\u003e\n                  \u003c/xhtml:div\u003e\n               \u003c/Example_Code\u003e\n               \u003cBody_Text\u003eThis code sends a DNS record to a requesting IP address. UDP allows the source IP address to be easily changed ('spoofed'), thus allowing an attacker to redirect responses to a target, which may be then be overwhelmed by the network traffic.\u003c/Body_Text\u003e\n            "
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2013-5211",
      "description": "composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-5211"
    },
    {
      "reference": "CVE-1999-0513",
      "description": "Classic \"Smurf\" attack, using spoofed ICMP packets to broadcast addresses.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0513"
    },
    {
      "reference": "CVE-1999-1379",
      "description": "DNS query with spoofed source address causes more traffic to be returned to spoofed address than was sent by the attacker.",
      "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1379"
    }
  ],
  "references": [
    {
      "reference_id": "REF-941",
      "author": [
        "US-CERT"
      ],
      "title": "UDP-based Amplification Attacks",
      "url": "https://www.us-cert.gov/ncas/alerts/TA14-017A",
      "publication_year": "2014",
      "publication_month": "--01",
      "publication_day": "---17"
    },
    {
      "reference_id": "REF-942",
      "author": [
        "Fortify"
      ],
      "title": "Android Bad Practices: Sticky Broadcast",
      "url": "http://www.hpenterprisesecurity.com/vulncat/en/vulncat/java/android_bad_practices_sticky_broadcast.html"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2014-02-13T00:00:00Z"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08T00:00:00Z",
        "modification_comment": "updated Modes_of_Introduction, References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24T00:00:00Z",
        "modification_comment": "updated Applicable_Platforms, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-03-15T00:00:00Z",
        "modification_comment": "updated Maintenance_Notes"
      }
    ]
  }
}
