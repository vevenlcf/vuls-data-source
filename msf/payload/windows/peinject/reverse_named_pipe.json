{
  "name": "Windows Inject PE Files, Windows x86 Reverse Named Pipe (SMB) Stager",
  "fullname": "payload/windows/peinject/reverse_named_pipe",
  "rank": 300,
  "type": "payload",
  "author": [
    "ege \u003cegebalci@pm.me\u003e",
    "OJ Reeves"
  ],
  "description": "Inject a custom native PE file into the exploited process using a reflective PE loader. The reflective PE\n          loader will execute the pre-mapped PE image starting from the address of entry after performing image base\n          relocation and API address resolution. This module requires a PE file that contains relocation data and a\n          valid (uncorrupted) import table. PE files with CLR(C#/.NET executables), bounded imports, and TLS callbacks\n          are not currently supported. Also PE files which use resource loading might crash.\n        . Connect back to the attacker via a named pipe pivot",
  "platform": "Windows",
  "arch": "x86",
  "mod_time": "2020-09-22T02:56:51Z",
  "path": "/modules/payloads/stagers/windows/reverse_named_pipe.rb",
  "is_install_path": true,
  "ref_name": "windows/peinject/reverse_named_pipe",
  "needs_cleanup": false
}
