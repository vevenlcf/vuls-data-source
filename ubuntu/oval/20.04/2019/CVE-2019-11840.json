{
  "id": "CVE-2019-11840",
  "definition_id": "oval:com.ubuntu.focal:def:2019118400000000",
  "title": "CVE-2019-11840 on Ubuntu 20.04 LTS (focal) - medium.",
  "description": "An issue was discovered in supplementary Go cryptography libraries, aka golang-googlecode-go-crypto, before 2019-03-20. A flaw was found in the amd64 implementation of golang.org/x/crypto/salsa20 and golang.org/x/crypto/salsa20/salsa. If more than 256 GiB of keystream is generated, or if the counter otherwise grows greater than 32 bits, the amd64 implementation will first generate incorrect output, and then cycle back to previously generated keystream. Repeated keystream bytes can lead to loss of confidentiality in encryption applications, or to predictability in CSPRNG applications.\n\nUpdate Instructions:\n\nRun `sudo ua fix CVE-2019-11840` to fix the vulnerability. The problem can be corrected\nby updating your system to the following package versions:\n\ngolang-golang-x-crypto-dev - 1:0.0~git20200221.2aa609c-1\nNo subscription required",
  "note": "jdstrand\u003e snapd contains an embedded copy of golang-go.crypto with the affected code snapd doesn't import/use the salsa code directly, but does vendor golang-gopkg-macaroon.v1, which imports golang.org/x/crypto/nacl/secretbox which does import salsa and contains the affected salsa2020XORKeyStream. snapd uses secretbox.Open() and secretbox.Seal(), both of which use salsa.XORKeyStream() (which wraps salsa2020XORKeyStream) via the internal decrypt() and encrypt() functions, respectively. In macaroon.v1, encrypt() is only used via AddThirdPartyCaveat() and decrypt() via Verify(). . overlord/auth/auth.go in snapd uses Verify() in CheckMacaroon(), daemon/api.go uses CheckMacaroon() in UserFromRequest(), which is called by ServeHTTP(), the service used to process snap commands from the local system to the local snapd. This CVE does not affect decrypt() operations. . AddThirdPartyCaveat() is only used in unit tests, but not in the binaries of snapd builds. . For snapd, ignoring since only encryption operations (ie, secretbox.Seal()) are affected with regard to loss of confidentiality/predictability and this function is only ever (ultimately) called via the snapd unit tests. lxd contains an embedded copy of golang-go.crypto, but does not import golang.org/x/crypto/nacl/secretbox or salsa. lxd in cosmic and later does not contain the affected code.",
  "severity": "Medium",
  "affected": {
    "family": "unix",
    "platform": "Ubuntu 20.04 LTS"
  },
  "packages": [
    {
      "name": "golang-go.crypto",
      "status": "not-affected",
      "note": "1:0.0~git20200221.2aa609c-1"
    },
    {
      "name": "snapd",
      "status": "ignored"
    }
  ],
  "references": [
    {
      "id": "CVE-2019-11840",
      "source": "CVE",
      "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11840"
    },
    {
      "id": "",
      "source": "REF",
      "url": "https://ubuntu.com/security/CVE-2019-11840"
    },
    {
      "id": "",
      "source": "REF",
      "url": "https://go.googlesource.com/crypto/+/b7391e95e576cacdcdd422573063bc057239113d"
    },
    {
      "id": "",
      "source": "REF",
      "url": "https://groups.google.com/forum/#!msg/golang-announce/tjyNcJxb2vQ/n0NRBziSCAAJ"
    },
    {
      "id": "",
      "source": "BUG",
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1691529"
    },
    {
      "id": "",
      "source": "BUG",
      "url": "https://github.com/golang/go/issues/30965"
    }
  ],
  "public_date": "2019-05-09T16:29:00Z",
  "rights": "Copyright (C) 2019 Canonical Ltd."
}
