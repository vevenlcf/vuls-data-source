{
  "id": "CVE-2020-11105",
  "definition_id": "oval:org.opensuse.security:def:202011105",
  "title": "CVE-2020-11105",
  "description": "\n    An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.\n    ",
  "severity": "Important",
  "impact": "important",
  "affected": {
    "family": "unix",
    "platforms": [
      "openSUSE Tumbleweed"
    ],
    "cpes": [
      "cpe:/o:opensuse:tumbleweed"
    ]
  },
  "packages": [
    {
      "name": "cereal-devel",
      "status": "released",
      "fixed_version": "0:1.3.2-1.1",
      "platform": "openSUSE Tumbleweed"
    }
  ],
  "references": [
    {
      "id": "Mitre CVE-2020-11105",
      "source": "CVE",
      "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11105"
    },
    {
      "id": "SUSE CVE-2020-11105",
      "source": "SUSE CVE",
      "url": "https://www.suse.com/security/cve/CVE-2020-11105"
    }
  ],
  "issued": "2022-07-22T00:00:00Z",
  "updated": "2022-07-22T00:00:00Z"
}
