{
  "vid": "50751310-a763-11e6-a881-b499baebfeaf",
  "topic": "openssl -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003eOpenSSL reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://www.openssl.org/news/secadv/20161110.txt\"\u003e\n\t  \u003cul\u003e\n\t    \u003cli\u003eChaCha20/Poly1305 heap-buffer-overflow (CVE-2016-7054)\u003cbr/\u003e\n\t      Severity: High\u003cbr/\u003e\n\t      TLS connections using *-CHACHA20-POLY1305 ciphersuites are susceptible to a DoS\n\t      attack by corrupting larger payloads. This can result in an OpenSSL crash. This\n\t      issue is not considered to be exploitable beyond a DoS.\u003c/li\u003e\n\t    \u003cli\u003eCMS Null dereference (CVE-2016-7053)\u003cbr/\u003e\n\t      Severity: Medium\u003cbr/\u003e\n\t      Applications parsing invalid CMS structures can crash with a NULL pointer\n\t      dereference. This is caused by a bug in the handling of the ASN.1 CHOICE type\n\t      in OpenSSL 1.1.0 which can result in a NULL value being passed to the structure\n\t      callback if an attempt is made to free certain invalid encodings. Only CHOICE\n\t      structures using a callback which do not handle NULL value are affected.\u003c/li\u003e\n\t    \u003cli\u003eMontgomery multiplication may produce incorrect results (CVE-2016-7055)i\u003cbr/\u003e\n\t      Severity: Low\u003cbr/\u003e\n\t      There is a carry propagating bug in the Broadwell-specific Montgomery\n\t      multiplication procedure that handles input lengths divisible by, but\n\t      longer than 256 bits.\u003c/li\u003e\n\t  \u003c/ul\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "openssl-devel",
      "range": [
        {
          "lt": "1.1.0c"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2016-11-10T00:00:00Z",
    "entry": "2016-11-10T00:00:00Z",
    "modified": "2016-11-11T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://www.openssl.org/news/secadv/20161110.txt"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7054"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7053"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7055"
    }
  ]
}
