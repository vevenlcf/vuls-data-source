{
  "vid": "145ce848-1165-11ec-ac7e-08002789875b",
  "topic": "Python -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003ePython reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://docs.python.org/3.8/whatsnew/changelog.html#changelog\"\u003e\n\t  \u003cp\u003ebpo-42278: Replaced usage of tempfile.mktemp() with TemporaryDirectory to avoid\n\t    a potential race condition.\u003c/p\u003e\n\t\u003cp\u003ebpo-44394: Update the vendored copy of libexpat to 2.4.1 (from 2.2.8) to get the\n\t    fix for the CVE-2013-0340 \"Billion Laughs\" vulnerability. This copy is most used\n\t    on Windows and macOS.\u003c/p\u003e\n\t\u003cp\u003ebpo-43124: Made the internal putcmd function in smtplib sanitize input for\n\t    presence of \\r and \\n characters to avoid (unlikely) command injection.\u003c/p\u003e\n\t\u003cp\u003ebpo-36384: ipaddress module no longer accepts any leading zeros in IPv4 address\n\t    strings. Leading zeros are ambiguous and interpreted as octal notation by some\n\t    libraries. For example the legacy function socket.inet_aton() treats leading\n\t    zeros as octal notation. glibc implementation of modern inet_pton() does not\n\t    accept any leading zeros. For a while the ipaddress module used to accept ambiguous\n\t    leading zeros.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "python38",
      "range": [
        {
          "lt": "3.8.12"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2021-08-30T00:00:00Z",
    "entry": "2021-09-09T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://docs.python.org/3.8/whatsnew/changelog.html#changelog"
    }
  ]
}
