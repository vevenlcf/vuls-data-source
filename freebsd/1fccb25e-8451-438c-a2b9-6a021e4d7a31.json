{
  "vid": "1fccb25e-8451-438c-a2b9-6a021e4d7a31",
  "topic": "nghttp2 -- Denial of service due to NULL pointer dereference",
  "description": "\n\t\u003cp\u003enghttp2 blog:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://nghttp2.org/blog/2018/04/12/nghttp2-v1-31-1/\"\u003e\n\t  \u003cp\u003eIf ALTSVC frame is received by libnghttp2 and it is larger than it can\n\t    accept, the pointer field which points to ALTSVC frame payload is left\n\t    NULL. Later libnghttp2 attempts to access another field through the\n\t    pointer, and gets segmentation fault.\u003c/p\u003e\n\t  \u003cp\u003eALTSVC frame is defined by RFC 7838.\u003c/p\u003e\n\t  \u003cp\u003eThe largest frame size libnghttp2 accept is by default 16384 bytes.\u003c/p\u003e\n\t  \u003cp\u003eReceiving ALTSVC frame is disabled by default. Application has to\n\t    enable it explicitly by calling\n\t    nghttp2_option_set_builtin_recv_extension_type(opt, NGHTTP2_ALTSVC).\u003c/p\u003e\n\t  \u003cp\u003eTransmission of ALTSVC is always enabled, and it does not cause this\n\t    vulnerability.\u003c/p\u003e\n\t  \u003cp\u003eALTSVC frame is expected to be sent by server, and received by client\n\t    as defined in RFC 7838.\u003c/p\u003e\n\t  \u003cp\u003eClient and server are both affected by this vulnerability if the\n\t    reception of ALTSVC frame is enabled. As written earlier, it is useless\n\t    to enable reception of ALTSVC frame on server side. So, server is\n\t    generally safe unless application accidentally enabled the reception of\n\t    ALTSVC frame.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "libnghttp2",
      "range": [
        {
          "lt": "1.31.1",
          "ge": "1.10.0"
        }
      ]
    },
    {
      "name": "nghttp2",
      "range": [
        {
          "lt": "1.31.1",
          "ge": "1.10.0"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2018-04-04T00:00:00Z",
    "entry": "2018-04-13T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://nghttp2.org/blog/2018/04/12/nghttp2-v1-31-1/"
    },
    {
      "source": "CVE",
      "text": "CVE-2018-1000168"
    }
  ]
}
