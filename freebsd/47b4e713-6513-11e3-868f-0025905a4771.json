{
  "vid": "47b4e713-6513-11e3-868f-0025905a4771",
  "topic": "PHP5 -- memory corruption in openssl_x509_parse()",
  "description": "\n\t\u003cp\u003eStefan Esser reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://www.sektioneins.de/advisories/advisory-012013-php-openssl_x509_parse-memory-corruption-vulnerability.html\"\u003e\n\t  \u003cp\u003eThe PHP function openssl_x509_parse() uses a helper function\n\t    called asn1_time_to_time_t() to convert timestamps from ASN1\n\t    string format into integer timestamp values. The parser within\n\t    this helper function is not binary safe and can therefore be\n\t    tricked to write up to five NUL bytes outside of an allocated\n\t    buffer.\u003c/p\u003e\n\t  \u003cp\u003eThis problem can be triggered by x509 certificates that contain\n\t    NUL bytes in their notBefore and notAfter timestamp fields and\n\t    leads to a memory corruption that might result in arbitrary\n\t    code execution.\u003c/p\u003e\n\t  \u003cp\u003eDepending on how openssl_x509_parse() is used within a PHP\n\t    application the attack requires either a malicious cert signed\n\t    by a compromised/malicious CA or can be carried out with a\n\t    self-signed cert.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "php5",
      "range": [
        {
          "lt": "5.4.23",
          "ge": "5.4.0"
        }
      ]
    },
    {
      "name": "php53",
      "range": [
        {
          "lt": "5.3.28"
        }
      ]
    },
    {
      "name": "php55",
      "range": [
        {
          "lt": "5.5.7",
          "ge": "5.5.0"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2013-12-13T00:00:00Z",
    "entry": "2013-12-14T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://www.sektioneins.de/advisories/advisory-012013-php-openssl_x509_parse-memory-corruption-vulnerability.html"
    },
    {
      "source": "CVE",
      "text": "CVE-2013-6420"
    }
  ]
}
