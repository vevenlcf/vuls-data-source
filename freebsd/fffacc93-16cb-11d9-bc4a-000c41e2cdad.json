{
  "vid": "fffacc93-16cb-11d9-bc4a-000c41e2cdad",
  "topic": "xv -- exploitable buffer overflows",
  "description": "\n\t\u003cp\u003eIn a Bugtraq posting, infamous41md(at)hotpop.com reported:\u003c/p\u003e\n\t\u003cblockquote cite=\"http://marc.theaimsgroup.com/?l=bugtraq\u0026amp;m=109302498125092\"\u003e\n\t  \u003cp\u003ethere are at least 5 exploitable buffer and heap\n\t    overflows in the image handling code. this allows someone\n\t    to craft a malicious image, trick a user into viewing the\n\t    file in xv, and upon viewing that image execute arbitrary\n\t    code under privileges of the user viewing image. note\n\t    the AT LEAST part of the above sentence. there is such a\n\t    plethora of bad code that I just stopped reading after\n\t    a while. there are at least 100 calls to sprintf() and\n\t    strcpy() with no regards for bounds of buffers. 95% of\n\t    these deal with program arguments or filenames, so they\n\t    are of no interest to exploit. however I just got sick of\n\t    reading this code after not too long. so im sure there are\n\t    still other overflows in the image handling code for other\n\t    image types.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n\t\u003cp\u003eThe posting also included an exploit.\u003c/p\u003e\n      ",
  "affects": [
    {
      "name": "xv",
      "range": [
        {
          "lt": "3.10a_4"
        }
      ]
    },
    {
      "name": "xv-m17n",
      "range": [
        {
          "lt": "3.10a_4"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2004-08-20T00:00:00Z",
    "entry": "2004-10-05T00:00:00Z",
    "modified": "2004-10-12T00:00:00Z"
  },
  "references": [
    {
      "source": "MLIST: 20040820032605.360e43e3.infamous41md@hotpop.com",
      "text": "http://marc.theaimsgroup.com/?l=bugtraq\u0026m=109302498125092"
    }
  ]
}
