{
  "vid": "f8e1e2a6-9791-11eb-b87a-901b0ef719ab",
  "topic": "FreeBSD -- double free in accept_filter(9) socket configuration interface",
  "description": "\n\t\u003ch1\u003eProblem Description:\u003c/h1\u003e\n\t\u003cp\u003eAn unprivileged process can configure an accept filter on a listening\n\tsocket.  This is done using the setsockopt(2) system call.  The process\n\tsupplies the name of the accept filter which is to be attached to the\n\tsocket, as well as a string containing filter-specific information.\u003c/p\u003e\n\t\u003cp\u003eIf the filter implements the accf_create callback, the socket option\n\thandler attempts to preserve the process-supplied argument string.  A\n\tbug in the socket option handler caused this string to be freed\n\tprematurely, leaving a dangling pointer.  Additional operations on the\n\tsocket can turn this into a double free or a use-after-free.\u003c/p\u003e\n\t\u003ch1\u003eImpact:\u003c/h1\u003e\n\t\u003cp\u003eThe bug may be exploited to trigger local privilege escalation or\n\tkernel memory disclosure.\u003c/p\u003e\n      ",
  "affects": [
    {
      "name": "FreeBSD-kernel",
      "range": [
        {
          "lt": "12.2_6",
          "ge": "12.2"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2021-04-06T00:00:00Z",
    "entry": "2021-04-07T00:00:00Z"
  },
  "references": [
    {
      "source": "CVE",
      "text": "CVE-2021-29627"
    },
    {
      "source": "FreebsdSA",
      "text": "SA-21:09.accept_filter"
    }
  ]
}
