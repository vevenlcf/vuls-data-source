{
  "vid": "3d8d3548-9d02-11db-a541-000ae42e9b93",
  "topic": "drupal -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003eThe Drupal security team reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"http://drupal.org/files/sa-2007-001/advisory.txt\"\u003e\n\t  \u003cp\u003eA few arguments passed via URLs are not properly sanitized\n\t    before display.  When an attacker is able to entice an\n\t    administrator to follow a specially crafted link, arbitrary\n\t    HTML and script code can be injected and executed in the\n\t    victim's session. Such an attack may lead to administrator\n\t    access if certain conditions are met.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n\t\u003cblockquote cite=\"http://drupal.org/files/sa-2007-002/advisory.txt\"\u003e\n\t  \u003cp\u003eThe way page caching was implemented allows a denial of\n\t    service attack. An attacker has to have the ability to post\n\t    content on the site. He or she would then be able to poison\n\t    the page cache, so that it returns cached 404 page not found\n\t    errors for existing pages.\u003c/p\u003e\n\t  \u003cp\u003eIf the page cache is not enabled, your site is not vulnerable.\n\t    The vulnerability only affects sites running on top of MySQL.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "drupal",
      "range": [
        {
          "lt": "4.7.5",
          "gt": "4.7"
        },
        {
          "lt": "4.6.11"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2007-01-05T00:00:00Z",
    "entry": "2007-01-05T00:00:00Z",
    "modified": "2010-05-12T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "http://drupal.org/files/sa-2007-001/advisory.txt"
    },
    {
      "source": "URL",
      "text": "http://drupal.org/files/sa-2007-002/advisory.txt"
    },
    {
      "source": "CVE",
      "text": "CVE-2007-0136"
    }
  ]
}
