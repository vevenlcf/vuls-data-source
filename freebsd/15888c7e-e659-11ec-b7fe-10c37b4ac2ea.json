{
  "vid": "15888c7e-e659-11ec-b7fe-10c37b4ac2ea",
  "topic": "go -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003eThe Go project reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://go.dev/issue/52561\"\u003e\n\t  \u003cp\u003ecrypto/rand: rand.Read hangs with extremely large buffers\u003c/p\u003e\n\t  \u003cp\u003eOn Windows, rand.Read will hang indefinitely if passed a\n\t    buffer larger than 1 \u0026lt;\u0026lt; 32 - 1 bytes.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n\t\u003cblockquote cite=\"https://go.dev/issue/52814\"\u003e\n\t  \u003cp\u003ecrypto/tls: session tickets lack random ticket_age_add\u003c/p\u003e\n\t  \u003cp\u003eSession tickets generated by crypto/tls did not contain\n\t    a randomly generated ticket_age_add. This allows an\n\t    attacker that can observe TLS handshakes to correlate\n\t    successive connections by comparing ticket ages during\n\t    session resumption.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n\t\u003cblockquote cite=\"https://go.dev/issue/52574\"\u003e\n\t  \u003cp\u003eos/exec: empty Cmd.Path can result in running unintended\n\t    binary on Windows\u003c/p\u003e\n\t  \u003cp\u003eIf, on Windows, Cmd.Run, cmd.Start, cmd.Output, or\n\t    cmd.CombinedOutput are executed when Cmd.Path is unset\n\t    and, in the working directory, there are binaries named\n\t    either \"..com\" or \"..exe\", they will be executed.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n\t\u003cblockquote cite=\"https://go.dev/issue/52476\"\u003e\n\t  \u003cp\u003epath/filepath: Clean(`.\\c:`) returns `c:` on Windows\u003c/p\u003e\n\t  \u003cp\u003eOn Windows, the filepath.Clean function could convert an\n\t    invalid path to a valid, absolute path. For example,\n\t    Clean(`.\\c:`) returned `c:`.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "go118",
      "range": [
        {
          "lt": "1.18.3"
        }
      ]
    },
    {
      "name": "go117",
      "range": [
        {
          "lt": "1.17.11"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2022-06-01T00:00:00Z",
    "entry": "2022-06-07T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://groups.google.com/g/golang-dev/c/DidEMYAH_n0"
    },
    {
      "source": "URL",
      "text": "https://go.dev/issue/52561"
    },
    {
      "source": "URL",
      "text": "https://go.dev/issue/52814"
    },
    {
      "source": "URL",
      "text": "https://go.dev/issue/52574"
    },
    {
      "source": "URL",
      "text": "https://go.dev/issue/52476"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-30634"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-30629"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-30580"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-29804"
    }
  ]
}
