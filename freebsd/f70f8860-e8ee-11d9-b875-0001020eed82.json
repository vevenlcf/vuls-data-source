{
  "vid": "f70f8860-e8ee-11d9-b875-0001020eed82",
  "topic": "kernel -- ipfw packet matching errors with address tables",
  "description": "\n\t\u003ch1\u003eProblem Description\u003c/h1\u003e\n\t\u003cp\u003eThe ipfw tables lookup code caches the result of the last\n\t  query.  The kernel may process multiple packets\n\t  concurrently, performing several concurrent table lookups.\n\t  Due to an insufficient locking, a cached result can become\n\t  corrupted that could cause some addresses to be incorrectly\n\t  matched against a lookup table.\u003c/p\u003e\n\t\u003ch1\u003eImpact\u003c/h1\u003e\n\t\u003cp\u003eWhen lookup tables are used with ipfw, packets may on very\n\t  rare occasions incorrectly match a lookup table.  This could\n\t  result in a packet being treated contrary to the defined\n\t  packet filtering ruleset. For example, a packet may be\n\t  allowed to pass through when it should have been\n\t  discarded.\u003c/p\u003e\n\t\u003cp\u003eThe problem can only occur on Symmetric Multi-Processor\n\t  (SMP) systems, or on Uni Processor (UP) systems with the\n\t  PREEMPTION kernel option enabled (not the default).\u003c/p\u003e\n\t\u003ch1\u003eWorkaround\u003c/h1\u003e\n\t\u003cp\u003ea) Do not use lookup tables.\u003c/p\u003e\n\t\u003cp\u003eOR\u003c/p\u003e\n\t\u003cp\u003eb) Disable concurrent processing of packets in the network\n\t  stack by setting the \"debug.mpsafenet=0\" tunable:\u003c/p\u003e\n\t\u003cp\u003e# echo \"debug.mpsafenet=0\" \u0026lt;\u0026lt; /boot/loader.conf\u003c/p\u003e\n      ",
  "affects": [
    {
      "name": "FreeBSD",
      "range": [
        {
          "lt": "5.4_3",
          "ge": "5.4"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2005-06-29T00:00:00Z",
    "entry": "2005-06-29T00:00:00Z",
    "modified": "2005-07-06T00:00:00Z"
  },
  "references": [
    {
      "source": "CVE",
      "text": "CVE-2005-2019"
    },
    {
      "source": "FreebsdSA",
      "text": "SA-05:13.ipfw"
    }
  ]
}
