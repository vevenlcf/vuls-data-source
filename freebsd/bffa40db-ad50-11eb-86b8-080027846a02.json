{
  "vid": "bffa40db-ad50-11eb-86b8-080027846a02",
  "topic": "Python -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003ePython reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://docs.python.org/3/whatsnew/changelog.html#changelog\"\u003e\n\t  \u003cp\u003ebpo-43434: Creating a sqlite3.Connection object now also produces a\n\t    sqlite3.connect auditing event. Previously this event was only produced\n\t    by sqlite3.connect() calls. Patch by Erlend E. Aasland.\u003c/p\u003e\n\t  \u003cp\u003ebpo-43882: The presence of newline or tab characters in parts of a URL\n\t    could allow some forms of attacks.Following the controlling specification\n\t    for URLs defined by WHATWG urllib.parse() now removes A SCII newlines\n\t    and tabs from URLs, preventing such attacks.\u003c/p\u003e\n\t  \u003cp\u003ebpo-43472: Ensures interpreter-level audit hooks receive the cpython.\n\t    PyInterpreterState_New event when called through the _xxsubinterpreters\n\t    module.\u003c/p\u003e\n\t  \u003cp\u003ebpo-36384: ipaddress module no longer accepts any leading zeros in IPv4\n\t    address strings. Leading zeros are ambiguous and interpreted as octal\n\t    notation by some libraries. For example the legacy function socket.inet_aton()\n\t    treats leading zeros as octal notatation. glibc implementation of modern\n\t    inet_pton() does not accept any leading zeros. For a while the ipaddress\n\t    module used to accept ambiguous leading zeros.\u003c/p\u003e\n\t  \u003cp\u003ebpo-43075: Fix Regular Expression Denial of Service (ReDoS) vulnerability\n\t    in urllib.request.AbstractBasicAuthHandler. The ReDoS-vulnerable regex has\n\t    quadratic worst-case complexity and it allows cause a denial of service\n\t    when identifying crafted invalid RFCs. This ReDoS issue is on the client\n\t    side and needs remote attackers to control the HTTP server.\u003c/p\u003e\n\t  \u003cp\u003ebpo-42800: Audit hooks are now fired for frame.f_code, traceback.tb_frame,\n\t    and generator code/frame attribute access.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "python38",
      "range": [
        {
          "lt": "3.8.10"
        }
      ]
    },
    {
      "name": "python39",
      "range": [
        {
          "lt": "3.9.5"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2021-03-08T00:00:00Z",
    "entry": "2021-05-05T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://docs.python.org/3/whatsnew/changelog.html#changelog"
    },
    {
      "source": "URL",
      "text": "https://docs.python.org/3.8/whatsnew/changelog.html#changelog"
    }
  ]
}
