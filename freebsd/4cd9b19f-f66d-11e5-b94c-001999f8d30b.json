{
  "vid": "4cd9b19f-f66d-11e5-b94c-001999f8d30b",
  "topic": "Multiple vulnerabilities in Botan",
  "description": "\n\t\u003cp\u003eThe botan developers reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"http://botan.randombit.net/security.html\"\u003e\n\t  \u003cp\u003eInfinite loop in modular square root algorithm - The ressol function implements the Tonelli-Shanks algorithm for finding square roots could be sent into a nearly infinite loop due to a misplaced conditional check. This could occur if a composite modulus is provided, as this algorithm is only defined for primes. This function is exposed to attacker controlled input via the OS2ECP function during ECC point decompression.\u003c/p\u003e\n\t  \u003cp\u003eHeap overflow on invalid ECC point - The PointGFp constructor did not check that the affine coordinate arguments were less than the prime, but then in curve multiplication assumed that both arguments if multiplied would fit into an integer twice the size of the prime.\u003c/p\u003e\n\t  \u003cp\u003eThe bigint_mul and bigint_sqr functions received the size of the output buffer, but only used it to dispatch to a faster algorithm in cases where there was sufficient output space to call an unrolled multiplication function.\u003c/p\u003e\n\t  \u003cp\u003eThe result is a heap overflow accessible via ECC point decoding, which accepted untrusted inputs. This is likely exploitable for remote code execution.\u003c/p\u003e\n\t  \u003cp\u003eOn systems which use the mlock pool allocator, it would allow an attacker to overwrite memory held in secure_vector objects. After this point the write will hit the guard page at the end of the mmapped region so it probably could not be used for code execution directly, but would allow overwriting adjacent key material.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "botan110",
      "range": [
        {
          "lt": "1.10.11"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2016-02-01T00:00:00Z",
    "entry": "2016-03-31T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "http://botan.randombit.net/security.html"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-2194"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-2195"
    }
  ]
}
