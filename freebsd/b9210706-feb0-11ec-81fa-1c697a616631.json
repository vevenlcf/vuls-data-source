{
  "vid": "b9210706-feb0-11ec-81fa-1c697a616631",
  "topic": "Node.js -- July 7th 2022 Security Releases",
  "description": "\n\t\u003cp\u003eNode.js reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://nodejs.org/en/blog/vulnerability/july-2022-security-releases/\"\u003e\n\t  \u003ch1\u003eHTTP Request Smuggling - Flawed Parsing of Transfer-Encoding\n\t  (Medium)(CVE-2022-32213)\u003c/h1\u003e\n\t  \u003cp\u003eThe llhttp parser in the http module does not correctly parse and\n\t  validate Transfer-Encoding headers. This can lead to HTTP Request\n\t  Smuggling (HRS).\u003c/p\u003e\n\t  \u003ch1\u003eHTTP Request Smuggling - Improper Delimiting of Header Fields\n\t  (Medium)(CVE-2022-32214)\u003c/h1\u003e\n\t  \u003cp\u003eThe llhttp parser in the http module does not strictly use the CRLF\n\t  sequence to delimit HTTP requests. This can lead to HTTP Request\n\t  Smuggling (HRS).\u003c/p\u003e\n\t  \u003ch1\u003eHTTP Request Smuggling - Incorrect Parsing of Multi-line\n\t  Transfer-Encoding (Medium)(CVE-2022-32215)\u003c/h1\u003e\n\t  \u003cp\u003eThe llhttp parser in the http module does not correctly handle\n\t  multi-line Transfer-Encoding headers. This can lead to HTTP Request\n\t  Smuggling (HRS).\u003c/p\u003e\n\t  \u003ch1\u003eDNS rebinding in --inspect via invalid IP addresses\n\t  (High)(CVE-2022-32212)\u003c/h1\u003e\n\t  \u003cp\u003eThe IsAllowedHost check can easily be bypassed because IsIPAddress\n\t  does not properly check if an IP address is invalid or not. When an\n\t  invalid IPv4 address is provided (for instance 10.0.2.555 is\n\t  provided), browsers (such as Firefox) will make DNS requests to the\n\t  DNS server, providing a vector for an attacker-controlled DNS server\n\t  or a MITM who can spoof DNS responses to perform a rebinding attack\n\t  and hence connect to the WebSocket debugger, allowing for arbitrary\n\t  code execution. This is a bypass of CVE-2021-22884.\u003c/p\u003e\n\t  \u003ch1\u003eAttempt to read openssl.cnf from /home/iojs/build/ upon startup\n\t  (Medium)(CVE-2022-32222)\u003c/h1\u003e\n\t  \u003cp\u003eWhen Node.js starts on linux based systems, it attempts to read\n\t  /home/iojs/build/ws/out/Release/obj.target/deps/openssl/openssl.cnf,\n\t  which ordinarily doesn't exist. On some shared systems an attacker may\n\t  be able create this file and therefore affect the default OpenSSL\n\t  configuration for other users.\u003c/p\u003e\n\t  \u003ch1\u003eOpenSSL - AES OCB fails to encrypt some bytes\n\t  (Medium)(CVE-2022-2097)\u003c/h1\u003e\n\t  \u003cp\u003eAES OCB mode for 32-bit x86 platforms using the AES-NI assembly\n\t  optimised implementation will not encrypt the entirety of the data\n\t  under some circumstances. This could reveal sixteen bytes of data that\n\t  was preexisting in the memory that wasn't written. In the special case\n\t  of \"in place\" encryption, sixteen bytes of the plaintext would be\n\t  revealed.  Since OpenSSL does not support OCB based cipher suites for\n\t  TLS and DTLS, they are both unaffected.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "node",
      "range": [
        {
          "lt": "14.20.0",
          "ge": "14.0.0"
        },
        {
          "lt": "16.16.0",
          "ge": "16.0.0"
        },
        {
          "lt": "18.5.0",
          "ge": "18.0.0"
        }
      ]
    },
    {
      "name": "node16",
      "range": [
        {
          "lt": "16.16.0"
        }
      ]
    },
    {
      "name": "node14",
      "range": [
        {
          "lt": "14.20.0"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2022-07-05T00:00:00Z",
    "entry": "2022-07-08T00:00:00Z",
    "modified": "2022-07-08T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://nodejs.org/en/blog/vulnerability/july-2022-security-releases/"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-32212"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-32213"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-32214"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-32215"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-32222"
    },
    {
      "source": "CVE",
      "text": "CVE-2022-2097"
    }
  ]
}
