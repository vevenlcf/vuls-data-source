{
  "vid": "bc19dcca-7b13-11e6-b99e-589cfc0654e1",
  "topic": "dropbear -- multiple vulnerabilities",
  "description": "\n\t\u003cp\u003eMatt Johnston reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"http://www.openwall.com/lists/oss-security/2016/09/15/2\"\u003e\n\t  \u003cp\u003eIf specific usernames including \"%\" symbols can be created on a system\n\t     (validated by getpwnam()) then an attacker could run arbitrary code as root\n\t     when connecting to Dropbear server.\n\n\t     A dbclient user who can control username or host arguments could potentially\n\t     run arbitrary code as the dbclient user. This could be a problem if scripts\n\t     or webpages pass untrusted input to the dbclient program.\u003c/p\u003e\n\t  \u003cp\u003edropbearconvert import of OpenSSH keys could run arbitrary code as\n\t     the local dropbearconvert user when parsing malicious key files.\u003c/p\u003e\n\t  \u003cp\u003edbclient could run arbitrary code as the local dbclient user if\n\t     particular -m or -c arguments are provided. This could be an issue where\n\t     dbclient is used in scripts.\u003c/p\u003e\n\t  \u003cp\u003edbclient or dropbear server could expose process memory to the\n\t     running user if compiled with DEBUG_TRACE and running with -v\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "dropbear",
      "range": [
        {
          "lt": "2016.74"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2016-07-12T00:00:00Z",
    "entry": "2016-09-15T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "\"http://www.openwall.com/lists/oss-security/2016/09/15/2\""
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7406"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7407"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7408"
    },
    {
      "source": "CVE",
      "text": "CVE-2016-7409"
    }
  ]
}
