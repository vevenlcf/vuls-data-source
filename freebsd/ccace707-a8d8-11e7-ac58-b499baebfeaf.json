{
  "vid": "ccace707-a8d8-11e7-ac58-b499baebfeaf",
  "topic": "cURL -- out of bounds read",
  "description": "\n\t\u003cp\u003eThe cURL project reports:\u003c/p\u003e\n\t\u003cblockquote cite=\"https://curl.haxx.se/docs/adv_20171004.html\"\u003e\n\t  \u003cp\u003eFTP PWD response parser out of bounds read\u003c/p\u003e\n\t  \u003cp\u003elibcurl may read outside of a heap allocated buffer when doing FTP.\u003c/p\u003e\n\t  \u003cp\u003eWhen libcurl connects to an FTP server and successfully logs in\n\t    (anonymous or not), it asks the server for the current directory with\n\t    the PWD command. The server then responds with a 257 response containing\n\t    the path, inside double quotes. The returned path name is then kept by\n\t    libcurl for subsequent uses.\u003c/p\u003e\n\t  \u003cp\u003eDue to a flaw in the string parser for this directory name, a directory\n\t    name passed like this but without a closing double quote would lead to\n\t    libcurl not adding a trailing NUL byte to the buffer holding the name.\n\t    When libcurl would then later access the string, it could read beyond\n\t    the allocated heap buffer and crash or wrongly access data beyond the\n\t    buffer, thinking it was part of the path.\u003c/p\u003e\n\t  \u003cp\u003eA malicious server could abuse this fact and effectively prevent\n\t    libcurl-based clients to work with it - the PWD command is always issued\n\t    on new FTP connections and the mistake has a high chance of causing a\n\t    segfault.\u003c/p\u003e\n\t\u003c/blockquote\u003e\n      ",
  "affects": [
    {
      "name": "curl",
      "range": [
        {
          "lt": "7.56.0"
        }
      ]
    }
  ],
  "dates": {
    "discovery": "2017-10-04T00:00:00Z",
    "entry": "2017-10-04T00:00:00Z"
  },
  "references": [
    {
      "source": "URL",
      "text": "https://curl.haxx.se/docs/adv_20171004.html"
    },
    {
      "source": "CVE",
      "text": "CVE-2017-1000254"
    }
  ]
}
