{
  "id": "ALAS-2022-1583",
  "type": "security",
  "author": "linux-security@amazon.com",
  "from": "linux-security@amazon.com",
  "status": "final",
  "version": "1.4",
  "title": "Amazon Linux AMI 2014.03 - ALAS-2022-1583: important priority package update for golang",
  "description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2021-44717:\n\tThere's a flaw in golang's syscall.ForkExec() interface. An attacker who manages to first cause a file descriptor exhaustion for the process, then cause syscall.ForkExec() to be called repeatedly, could compromise data integrity and/or confidentiality in a somewhat uncontrolled way in programs linked with and using syscall.ForkExec().\n\nCVE-2021-44716:\n\tThere's an uncontrolled resource consumption flaw in golang's net/http library in the canonicalHeader() function. An attacker who submits specially crafted requests to applications linked with net/http's http2 functionality could cause excessive resource consumption that could lead to a denial of service or otherwise impact to system performance and resources.\n\nCVE-2021-41772:\n\tA vulnerability was found in archive/zip of the Go standard library. Applications written in Go where Reader.Open (the API implementing io/fs.FS introduced in Go 1.16) can panic when parsing a crafted ZIP archive containing completely invalid names or an empty filename argument.\n\nCVE-2021-41771:\n\tAn out of bounds read vulnerability was found in debug/macho of the Go standard library. When using the debug/macho standard library (stdlib) and malformed binaries are parsed using Open or OpenFat, it can cause golang to attempt to read outside of a slice (array) causing a panic when calling ImportedSymbols. An attacker can use this vulnerability to craft a file which causes an application using this library to crash resulting in a denial of service.\n\nCVE-2021-38297:\n\tA validation flaw was found in golang. When invoking functions from WASM modules built using GOARCH=wasm GOOS=js, passing very large arguments can cause portions of the module to be overwritten with data from the arguments. The highest threat from this vulnerability is to integrity.\n",
  "severity": "important",
  "pkglist": {
    "short": "amazon-linux-ami",
    "name": "Amazon Linux AMI",
    "package": [
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-bin",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-bin-1.16.15-1.37.amzn1.x86_64.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-docs",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-docs-1.16.15-1.37.amzn1.noarch.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-1.16.15-1.37.amzn1.x86_64.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-tests",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-tests-1.16.15-1.37.amzn1.noarch.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-misc",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-misc-1.16.15-1.37.amzn1.noarch.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-src",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-src-1.16.15-1.37.amzn1.noarch.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-race",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-race-1.16.15-1.37.amzn1.x86_64.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-shared",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-shared-1.16.15-1.37.amzn1.x86_64.rpm"
      },
      {
        "arch": "i686",
        "epoch": "0",
        "name": "golang-shared",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-shared-1.16.15-1.37.amzn1.i686.rpm"
      },
      {
        "arch": "i686",
        "epoch": "0",
        "name": "golang",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-1.16.15-1.37.amzn1.i686.rpm"
      },
      {
        "arch": "i686",
        "epoch": "0",
        "name": "golang-bin",
        "release": "1.37.amzn1",
        "version": "1.16.15",
        "filename": "Packages/golang-bin-1.16.15-1.37.amzn1.i686.rpm"
      }
    ]
  },
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38297",
      "id": "CVE-2021-38297",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41771",
      "id": "CVE-2021-41771",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41772",
      "id": "CVE-2021-41772",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44716",
      "id": "CVE-2021-44716",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44717",
      "id": "CVE-2021-44717",
      "type": "cve"
    }
  ],
  "issued": "2022-04-25T15:59:00Z",
  "updated": "2022-04-28T21:49:00Z"
}
