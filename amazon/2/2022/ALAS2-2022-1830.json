{
  "id": "ALAS2-2022-1830",
  "type": "security",
  "author": "linux-security@amazon.com",
  "from": "linux-security@amazon.com",
  "status": "final",
  "version": "1.4",
  "title": "Amazon Linux 2 2017.12 - ALAS2-2022-1830: important priority package update for golang",
  "description": "Package updates are available for Amazon Linux 2 that fix the following vulnerabilities:\nCVE-2022-28327:\n\tAn integer overflow flaw was found in Golang's crypto/elliptic library. This flaw allows an attacker to use a crafted scaler input longer than 32 bytes, causing P256().ScalarMult or P256().ScalarBaseMult to panic, leading to a loss of availability.\n\nCVE-2022-24921:\n\tA stack overflow flaw was found in Golang's regexp module, which can crash the runtime if the application using regexp accepts very long or arbitrarily long regexps from untrusted sources that have sufficient nesting depths. To exploit this vulnerability, an attacker would need to send large regexps with deep nesting to the application. Triggering this flaw leads to a crash of the runtime, which causes a denial of service.\n\nCVE-2022-24675:\n\tA buffer overflow flaw was found in Golang's library encoding/pem. This flaw allows an attacker to use a large PEM input (more than 5 MB) ), causing a stack overflow in Decode, which leads to a loss of availability.\n\nCVE-2022-23806:\n\tA flaw was found in the elliptic package of the crypto library in golang when the IsOnCurve function could return true for invalid field elements. This flaw allows an attacker to take advantage of this undefined behavior, affecting the availability and integrity of the resource.\n\nCVE-2022-23773:\n\tcmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.\n\nCVE-2022-23772:\n\tRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.\n\nCVE-2021-39293:\n\tA vulnerability was found in archive/zip of the Go standard library. Applications written in Go can panic or potentially exhaust system memory when parsing malformed ZIP files. An attacker capable of submitting a crafted ZIP file to a Go application using archive/zip to process that file could cause a denial of service via memory exhaustion or panic. This particular flaw is an incomplete fix for a previous flaw.\n\nCVE-2021-38297:\n\tA validation flaw was found in golang. When invoking functions from WASM modules built using GOARCH=wasm GOOS=js, passing very large arguments can cause portions of the module to be overwritten with data from the arguments. The highest threat from this vulnerability is to integrity.\n\nCVE-2021-36221:\n\tA race condition flaw was found in Go. The incoming requests body weren't closed after the handler panic and as a consequence this could lead to ReverseProxy crash.  The highest threat from this vulnerability is to Availability.\n\nCVE-2021-33198:\n\tA flaw was found in Go, where it attempts to allocate excessive memory. This issue may cause panic or unrecoverable fatal error if passed inputs with very large exponents. The highest threat from this vulnerability is to system availability.\n\nCVE-2021-33197:\n\tA flaw was found in Go, acting as an unintended proxy or intermediary, where ReverseProxy forwards connection headers if the first one was empty. This flaw allows an attacker to drop arbitrary headers. The highest threat from this vulnerability is to integrity.\n\nCVE-2021-33195:\n\tA flaw was found in Go. The LookupCNAME, LookupSRV, LookupMX, LookupNS, and LookupAddr functions in the net package and methods on the Resolver type, may return arbitrary values retrieved from DNS, allowing injection of unexpected contents. The highest threat from this vulnerability is to integrity.\n\nCVE-2021-27919:\n\tAn out of bounds read vulnerability was found in golang. When using the archive/zip standard library (stdlib) and an unexpected file is parsed, it can cause golang to attempt to read outside of a slice (array) causing a panic in the runtime. A potential attacker can use this vulnerability to craft an archive which causes an application using this library to crash resulting in a Denial of Service (DoS).\n\nCVE-2021-27918:\n\tAn infinite loop vulnerability was found in golang. If an application defines a custom token parser initializing with `xml.NewTokenDecoder` it is possible for the parsing loop to never return. An attacker could potentially craft a malicious XML document which has an XML element with `EOF` within it, causing the parsing application to endlessly loop, resulting in a Denial of Service (DoS).\n\nCVE-2020-29652:\n\tA null pointer dereference vulnerability was found in golang. When using the library's ssh server without specifying an option for GSSAPIWithMICConfig, it is possible for an attacker to craft an ssh client connection using the  authentication method and cause the server to panic resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n",
  "severity": "important",
  "pkglist": {
    "short": "amazon-linux-2",
    "name": "Amazon Linux 2",
    "package": [
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-1.18.3-1.amzn2.x86_64.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-docs",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-docs-1.18.3-1.amzn2.noarch.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-misc",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-misc-1.18.3-1.amzn2.noarch.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-tests",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-tests-1.18.3-1.amzn2.noarch.rpm"
      },
      {
        "arch": "noarch",
        "epoch": "0",
        "name": "golang-src",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-src-1.18.3-1.amzn2.noarch.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-bin",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-bin-1.18.3-1.amzn2.x86_64.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-shared",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-shared-1.18.3-1.amzn2.x86_64.rpm"
      },
      {
        "arch": "x86_64",
        "epoch": "0",
        "name": "golang-race",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-race-1.18.3-1.amzn2.x86_64.rpm"
      },
      {
        "arch": "aarch64",
        "epoch": "0",
        "name": "golang",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-1.18.3-1.amzn2.aarch64.rpm"
      },
      {
        "arch": "aarch64",
        "epoch": "0",
        "name": "golang-bin",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-bin-1.18.3-1.amzn2.aarch64.rpm"
      },
      {
        "arch": "aarch64",
        "epoch": "0",
        "name": "golang-shared",
        "release": "1.amzn2",
        "version": "1.18.3",
        "filename": "Packages/golang-shared-1.18.3-1.amzn2.aarch64.rpm"
      }
    ]
  },
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-29652",
      "id": "CVE-2020-29652",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27918",
      "id": "CVE-2021-27918",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27919",
      "id": "CVE-2021-27919",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33195",
      "id": "CVE-2021-33195",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33197",
      "id": "CVE-2021-33197",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33198",
      "id": "CVE-2021-33198",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36221",
      "id": "CVE-2021-36221",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38297",
      "id": "CVE-2021-38297",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39293",
      "id": "CVE-2021-39293",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23772",
      "id": "CVE-2022-23772",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23773",
      "id": "CVE-2022-23773",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23806",
      "id": "CVE-2022-23806",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24675",
      "id": "CVE-2022-24675",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24921",
      "id": "CVE-2022-24921",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-28327",
      "id": "CVE-2022-28327",
      "type": "cve"
    }
  ],
  "issued": "2022-07-28T21:55:00Z",
  "updated": "2022-08-08T18:42:00Z"
}
